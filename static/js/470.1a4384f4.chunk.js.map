{"version":3,"file":"static/js/470.1a4384f4.chunk.js","mappings":"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","sources":["Components/Login/Login.styled.jsx","Components/Login/Login.jsx","Pages/LoginPage/LoginPage.styled.jsx","Pages/LoginPage/LoginPage.jsx","service/api.jsx","service/axios.users.jsx"],"sourcesContent":["import styled from \"styled-components\";\n// import { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  text-align: center;\n  font-family: Arial, sans-serif;\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  background: linear-gradient(to right, #e66465, #9198e5);\n  box-shadow: 0px 0px 8px 8px rgba(0, 0, 0, 0.5);\n  margin: 10px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n`;\n\nexport const ButtonGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 12px;\n  /* background-color: #ffb74d; */\n  margin: 10px;\n`;\n\nexport const InputLabel = styled.label`\n  margin: 5px 0;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: #fff;\n  margin-top: 10px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const WrapperInputForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const WrapperShawPassword = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin-top: 35px;\n  margin-right: 20px;\n`;","import React, { useState } from \"react\";\nimport { useNavigate  } from \"react-router-dom\";\n// import { Link } from \"react-router-dom\";\n// import Auth from '../Header/Auth/Auth';\nimport { useDispatch } from 'react-redux';\nimport { setUser } from '../../Redux/userSlice';\nimport { setSeasonTickets } from '../../Redux/seasonTicketsSlice';\nimport { clientAPI } from '../../service/axios.users';\nimport 'react-phone-number-input/style.css'\nimport PhoneInput, {isPossiblePhoneNumber} from 'react-phone-number-input'\nimport { LiaEyeSolid } from \"react-icons/lia\";\nimport { LiaEyeSlashSolid } from \"react-icons/lia\";\n\nimport {\n  Container,\n  Form,\n  ButtonGroup,\n  Button,\n  InputLabel,\n  Input,\n  SubmitButton,\n  WrapperInputForm,\n  WrapperShawPassword\n} from './Login.styled';\n\nconst Login = ({ onLogin }) => {\n  const [openLogin, setOpenLogin] = useState(true);\n  const [openRegistration, setOpenRegistration] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [name, setName] = useState('');\n  const [birthday, setBirthday] = useState('');\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  // const user = useSelector((state) => state.user);\n  const navigate = useNavigate ();\n// OnRegistration\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n\n      const getData = openLogin\n          ? await clientAPI.OnLogin(email, password)\n          : openRegistration\n              ? await clientAPI.OnRegistration(name, birthday, email, password)\n              : null;\n\n        if (getData) {\n          const getseasonTickets = await clientAPI.OnGetAllSeasonTickets()\n          const userData = { ...getData.data, isAuthenticated: true };\n          dispatch(setUser(userData));\n          dispatch(setSeasonTickets(getseasonTickets));\n\n          // Додати затримку перед переходом на /cabinet (2 секунди)\n          // setTimeout(() => {\n              navigate('/cabinet');\n          // }, 2000);\n      }\n  };\n\n\n\n  const changeViewBTN = (e) => {\n    e.preventDefault();\n    if (e.target.id === \"login\") {\n      setOpenRegistration(false);\n      return setOpenLogin(true);\n    }\n    if (e.target.id === \"registration\") {\n      setOpenLogin(false);\n      return setOpenRegistration(true);\n    }\n  };\n\n    // Функція для зміни стану відображення паролю\n  const toggleShowPassword = (e) => {\n    e.preventDefault();\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <ButtonGroup>\n          <Button\n            id=\"login\"\n            className={openLogin ? 'active_btn' : ''}\n            onClick={changeViewBTN}\n          >\n            Вхід\n          </Button>\n          <Button\n            id=\"registration\"\n            className={openRegistration ? 'active_btn' : ''}\n            onClick={changeViewBTN}\n          >\n            Реєстрація\n          </Button>\n        </ButtonGroup>\n        {openRegistration\n          ?\n          <WrapperInputForm>\n            <InputLabel>Ім'я</InputLabel>\n            <Input\n              type=\"text\"\n              placeholder=\"ім'я\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <InputLabel>Дата народження</InputLabel>\n            <Input\n              type=\"date\"\n              placeholder=\"дата народження\"\n              value={birthday}\n              onChange={(e) => setBirthday(e.target.value)}\n            />\n          </WrapperInputForm>\n          :\n          <>\n          </>\n        }\n        <WrapperInputForm>\n          <InputLabel>Логін</InputLabel>\n          <PhoneInput\n            placeholder=\"номер телефону\"\n            international\n            defaultCountry=\"UA\"\n            initialValueFormat=\"national\"\n            countryCallingCodeEditable={false}\n            value={email}\n            onChange={setEmail}\n            style={{\n              border: '1px solid #ccc',\n              borderRadius: '5px',\n              backgroundColor: '#fff',\n              paddingLeft: '10px',\n            }} />\n          Is possible: {email && isPossiblePhoneNumber(email) ? 'true' : 'false'}\n        </WrapperInputForm>\n        <WrapperInputForm>\n          <InputLabel>Пароль</InputLabel>\n          <Input\n            type={showPassword ? \"text\" : \"password\"}\n            placeholder=\"пароль\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <WrapperShawPassword>\n            {showPassword ?\n              <LiaEyeSolid\n                onClick={toggleShowPassword}\n                size={20}\n              />\n              :\n              <LiaEyeSlashSolid\n                onClick={toggleShowPassword}\n                size={20}\n              />}\n            {/* </button> */}\n          </WrapperShawPassword>\n        </WrapperInputForm>\n        {openLogin ?\n          <SubmitButton\n            type=\"submit\"\n            to='/cabinet'\n          >\n            Увійти\n          </SubmitButton>\n          : <SubmitButton\n            type=\"submit\"\n            to='/cabinet'\n          >\n            Зареєструватися\n          </SubmitButton>}\n        {/* {openLogin ? <Link to='/cabinet'>Увійти</Link> : <Link to='/cabinet'>Зареєструватися</Link>} */}\n      </Form>\n      {/* <h3>або</h3>\n      <div style={{display:'flex', justifyContent: 'center'}}>\n      <Auth/>\n      </div> */}\n    </Container>\n  );\n};\n\nexport default Login;\n","import styled from \"styled-components\";\n\nexport const WrapperPage = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  top: 90px;\n  text-align: center;\n`;","import Login from \"../../Components/Login/Login\";\nimport {\n  WrapperPage\n} from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <WrapperPage>\n      <Login/>\n    </WrapperPage>\n  )\n};\n\nexport default LoginPage;","import axios from 'axios';\n// https://sandra-back-end.herokuapp.com http://localhost:8080 https://sandra-back-render.onrender.com\n\nconst serverAPI = axios.create({\n  // baseURL: 'https://sandra-back-render.onrender.com/',\n  // baseURL: 'https://sandra-base.herokuapp.com/',\n  baseURL: 'https://ars-fit-studio-server.onrender.com',\n\n\n  // baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nconst tgSandra = axios.create({\n  // 163995726 - sandra\n  // 525427019 - alexnumo\n  // baseURL: 'https://sandra-back-render.onrender.com/',\n  baseURL: 'https://api.telegram.org/bot5673512453:AAH-Ac0g-PMN8FwXj16kLg8OiXl99PYJYi8/sendMessage?chat_id=525427019&text=',\n  // baseURL: 'https://api.telegram.org/bot\"ключ_бота\"/sendMessage?chat_id=\"мій_чат\"&text=',\n  // baseURL: 'https://api.telegram.org/bot6096389512:AAGJpKndAcXG8jCZ1bqSXpEVNJSrcHkwv3I/sendMessage?chat_id=525427019&text=',\n  // baseURL: 'https://api.telegram.org/bot6096389512:AAGJpKndAcXG8jCZ1bqSXpEVNJSrcHkwv3I/sendMessage?chat_id=163995726&text=',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport {\n  serverAPI,\n  tgSandra\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setUser } from '../Redux/userSlice';\nimport {\n  serverAPI,\n  tgSandra\n} from './api';\n\nexport const OnLogin = async (tel, password) => {\n  try {\n    const res = await serverAPI.post(`/user/login`, { tel, password });\n    // console.log(res.data);\n    const name = res.data.name;\n    toast.success(`${name}, Ви успішно увійшли`);\n    return res;\n  } catch (e) {\n    console.log(\"Error: \", e);\n\n    if (e.response && e.response.data && e.response.data.message) {\n      toast.error(e.response.data.message);\n    } else {\n      toast.error(\"Щось пішло не так\");\n    }\n  }\n};\n\nexport const OnRegistration = async (name, birthday, tel, password) => {\n  try {\n\n    const res = await serverAPI.post(`/user/registration`, { name, birthday, tel, password });\n    toast.success(`${name}, Ви успішно зареєструвалися`);\n    \n    return res.data;\n  } catch (e) {\n    console.log(\"Error: \", e);\n\n    if (e.response && e.response.data && e.response.data.message) {\n      toast.error(e.response.data.message);\n    } else {\n      toast.error(\"Щось пішло не так\");\n    }\n  }\n};\n\nexport const OnUpgradeUser = async (updatedUser) => {\n  try {\n    const result = await serverAPI.post(`/user/upgrade`, updatedUser);\n    toast.success(\"Зміни внесено успішно\");\n    return result;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnUpgradeUserPassword = async (updatedUser) => {\n  // console.log(updatedUser)\n  try {\n    const result = await serverAPI.post(`/user/upgrade/password`, updatedUser);\n    // if (result.status === 201) {\n    toast.success(\"Зміни внесено успішно\");\n    // }\n    console.log(result)\n    return result;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnGetAllSeasonTickets = async () => {\n  try {\n    const result = await serverAPI.get(`/seasonTickets`);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnBuySeasonTicket = async (userData) => {\n  // console.log(userData);\n  try {\n    const result = await serverAPI.post(`/seasonTickets`, userData);\n    console.log(result.data);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnSendTgBuySeasonTicket = async (userData) => {\n  // console.log(userData);\n  try {\n    const urlInsta = `https://www.instagram.com/${userData.user.instagram}/`;\n    let seasonTicketKind = '';\n    if (userData.seasonTicket.kind === 'group') {\n      seasonTicketKind = 'групових';\n    }\n    if (userData.seasonTicket.kind === 'personal') {\n      seasonTicketKind = 'персональних';\n    }\n\n    const phoneNumber = userData.user.tel.replace(/\\D/g, ''); // Видаляємо всі символи, окрім цифр\n    const nationalPhoneNumber = phoneNumber.startsWith('38') ? phoneNumber.slice(2) : phoneNumber; // Обрізаємо +38, якщо він присутній\n\n    const res = await tgSandra.get(`Клієнт ${userData.user.name} ${userData.user.surname} бажає придбати абонемент на ${userData.seasonTicket.name} для ${seasonTicketKind} занять вартістю ${userData.seasonTicket.price} грн. Номер телефону клієнта: ${nationalPhoneNumber}, instagram: ${urlInsta}`);\n\n    return res;\n  } catch (error) {\n    toast.error('Щось пішло не так');\n    console.log(error.message)\n  }\n};\n\n\nexport const OnRecordTraining = async (userData) => {\n  // console.log(userData)\n  try {\n    const res = await serverAPI.post(`/user/signUpTraining`, userData);\n    // console.log(res)\n    if (res.data.messages.error && res.data.messages.error === 'Кількість тренувань по абонементу закінчилася. Ви записані як на разове заняття') {\n        toast.warning(`${res.data.messages.error}`);\n      return res;\n    } else if (res.data.messages.error === 'Повторний запис на тренування') {\n        toast.error('Повторний запис на тренування');\n      return res.data;\n    } else {\n        toast.success('Ви успішно записалися на тренування');\n      return res;\n    }\n  } catch (e) {\n    toast.error('Щось пішло не так');\n    console.log(e);\n  }\n};\n\nexport const OnGetCoachTrainings = async (coachLabel) => {\n  // console.log(coachLabel);\n  try {\n    const result = await serverAPI.post(`/user/coach`, {coachLabel});\n    // console.log(coachLabel);\n    // console.log(result.data);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n// OnSendVisitTraining\nexport const OnSendVisitTraining = async (trainingInfo) => {\n  console.log(trainingInfo);\n  try {\n    const result = await serverAPI.post(`/user/coach/visit`, trainingInfo);\n    console.log(result);\n    if (result.data) {\n      toast.info(result.data);\n    }\n    // console.log(result);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnGetCoaches = async () => {\n  try {\n    const result = await serverAPI.get(`/user/coach`);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnGetCoachSalary = async (coachInfo) => {\n  try {\n    const result = await serverAPI.put(`/user/coach/salary`, coachInfo);\n    console.log(result.data); \n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\n\n// export const getData = async ({id}) => {\n//   try {\n//     const result = await serverAPI.put(`/api`, { id });\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getDataALL = async () => {\n//   try {\n//     const result = await serverAPI.get(`/api`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const addTrainee = async ({ name_Coach, info }) => {\n//   try {\n//     const res = await serverAPI.post(`/trainee`, { name_Coach, info });\n//     toast.success('Зміни відправлено');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const findTrainee = async ({name_Coach}) => {\n//   try {\n//     const result = await serverAPI.put(`/trainee`, { name_Coach });\n//     console.log(result);\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getAllTrainee = async () => {\n//   try {\n//     const result = await serverAPI.get(`/trainee`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getAllCoach = async () => {\n//   try {\n//     const result = await serverAPI.get(`/coach`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const addCoach = async ({ name_Coach, tel, instagram, trainings }) => {\n//   try {\n//     const res = await serverAPI.post(`/coach`, { name_Coach, tel, instagram, trainings });\n//     toast.success('Нового тренера додано');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const deleteCoach = async (name_Coach) => {\n//   try {\n//     console.log(name_Coach);\n//     const result = await serverAPI.put(`/coach`, { name_Coach });\n//     toast.success('Тренера видалено');\n//     return console.log(result);\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getAllClient = async () => {\n//   try {\n//     const result = await serverAPI.get(`/client`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const addClient = async ({ name_client, tel }) => {\n//   try {\n//     const res = await serverAPI.post(`/client`, { name_client, tel });\n//     toast.success('Нового тренера додано');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const deleteClient = async ({name_client}) => {\n//   try {\n//     const result = await serverAPI.put(`/client`, { name_client });\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const sendNewKindTrainee = async ({ id, value, label }) => {\n//   try {\n//     const res = await serverAPI.post(`/kindtrainee`, { id, value, label });\n//     toast.success('Зміни відправлено');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const deleteKindTrainee = async ({id}) => {\n//   try {\n//     const result = await serverAPI.put(`/kindtrainee`, { id });\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getKindTraineeAll = async () => {\n//   try {\n//     const result = await serverAPI.get(`/kindtrainee`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const sendDataUsers = async ({ id, info }) => {\n//   try {\n//     const res = await serverAPI.post(`/tgbot`, { id, info });\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const canceledTraining = async (id, status) => {\n//   try {\n//     if (status.status === false) {\n//       const res = await serverAPI.put(`/tgbot/visit`, { id, status });\n//       toast.success(`Скасовано заняття для клієнта \"${res.data.info[0].name}\"`)\n//     return res;\n//     }   \n//   } catch (e) {\n//     toast.error('Щось пішло не так');\n//     console.error(e.message);\n//   }\n// };\n\n// export const sendSeasonTicketVisitTrainee = async (id) => {\n//   try {\n//     const res = await serverAPI.put(`/tgbot/changeSeasonTicket`, id);\n//     toast.success(`Підтвердженео заняття для клієнта \"${res.data.info[0].name}\"`);\n//     return res;\n//   } catch (e) {\n//     toast.error('Щось пішло не так');\n//     console.error(e.message);\n//   }\n// };\n\n// export const sendVisitTrainingInfoSeasonTickets = async (data) => {\n//   try {\n//     // console.log(data)\n//     const res = await serverAPI.put(`/tgbot/changeSeasonTicket/infoTrainings`, data);\n//     return res;\n//   } catch (e) {\n//     toast.error('Щось пішло не так');\n//     console.error(e.message);\n//   }\n// };\n\n// export const deleteDataUsers = async (id) => {\n//   try {\n//     const result = await serverAPI.put(`/tgbot`, id);\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getDataALLUsers = async () => {\n//   try {\n//     const result = await serverAPI.get(`/tgbot`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const sendSeasonTicket = async (data) => {\n//     try {\n//       const result = await serverAPI.put(`/tgbot/seasonTicket`, data);\n//       return result.data;\n//     } catch (error) {\n//       toast.error('Упс, щось пішло не так');\n//       console.error(error.message);\n//     }\n//   };\n\n// const sendTgRecord = async ({id, day_translate, clientName, kind_trainee, time, date, instaNickName}) => {\n//   try {\n//     const urlInsta = `https://www.instagram.com/${instaNickName.substring(1)}/`\n//     const res = await tgSandra.post(`Записався клієнт ${clientName} на тренування ${kind_trainee} в ${day_translate} о ${time}. Номер телефону клієнта ${id}, дата тренування: ${date}, Instagram: ${urlInsta}`,);\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\nexport const clientAPI = {\n  OnLogin,\n  OnRegistration,\n  OnUpgradeUser,\n  OnUpgradeUserPassword,\n  OnGetAllSeasonTickets,\n  OnSendTgBuySeasonTicket,\n  OnBuySeasonTicket,\n  OnRecordTraining,\n  OnGetCoachTrainings,\n  OnSendVisitTraining,\n  OnGetCoaches,\n  OnGetCoachSalary,\n  // sendData,\n  // getData,\n  // getDataALL,\n  // addTrainee,\n  // findTrainee,\n  // getAllTrainee,\n  // addCoach,\n  // deleteCoach,\n  // getAllCoach,\n  // getAllClient,\n  // addClient,\n  // sendNewKindTrainee,\n  // deleteKindTrainee,\n  // getKindTraineeAll,\n  // sendDataUsers,\n  // sendSeasonTicketVisitTrainee,\n  // sendVisitTrainingInfoSeasonTickets,\n  // deleteDataUsers,\n  // getDataALLUsers,\n  // sendSeasonTicket,\n  // canceledTraining,\n  // sendTgRecord\n};"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","ButtonGroup","_templateObject3","Button","button","_templateObject4","InputLabel","label","_templateObject5","Input","input","_templateObject6","SubmitButton","_templateObject7","WrapperInputForm","_templateObject8","WrapperShawPassword","_templateObject9","_ref","onLogin","openLogin","setOpenLogin","useState","openRegistration","setOpenRegistration","showPassword","setShowPassword","name","setName","birthday","setBirthday","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","changeViewBTN","e","preventDefault","target","id","toggleShowPassword","_jsx","children","_jsxs","onSubmit","async","getData","clientAPI","OnLogin","OnRegistration","getseasonTickets","OnGetAllSeasonTickets","userData","data","isAuthenticated","setUser","setSeasonTickets","handleSubmit","className","onClick","type","placeholder","value","onChange","_Fragment","PhoneInput","international","defaultCountry","initialValueFormat","countryCallingCodeEditable","style","border","borderRadius","backgroundColor","paddingLeft","isPossiblePhoneNumber","LiaEyeSolid","size","LiaEyeSlashSolid","to","WrapperPage","LoginPage","Login","serverAPI","axios","create","baseURL","headers","tgSandra","tel","res","post","toast","success","concat","console","log","response","message","error","OnUpgradeUser","result","updatedUser","OnUpgradeUserPassword","get","OnSendTgBuySeasonTicket","urlInsta","user","instagram","seasonTicketKind","seasonTicket","kind","phoneNumber","replace","nationalPhoneNumber","startsWith","slice","surname","price","OnBuySeasonTicket","OnRecordTraining","messages","warning","OnGetCoachTrainings","coachLabel","OnSendVisitTraining","trainingInfo","info","OnGetCoaches","OnGetCoachSalary","put","coachInfo"],"sourceRoot":""}