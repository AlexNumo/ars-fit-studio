{"version":3,"file":"static/js/417.2dc332cd.chunk.js","mappings":"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","sources":["Components/UserInformation/UserInformation.styled.jsx","Components/UserInformation/Settings/Settings.styled.jsx","Components/ModalView/ModalView.styled.jsx","service/axios.schedule.jsx","service/axios.kindTrainings.jsx","Components/ModalView/ModalView.jsx","Components/UserInformation/Settings/Settings.jsx","Components/UserInformation/Sliders/Sliders.styled.jsx","Components/UserInformation/LoveTrainings/LoveTrainings.styled.jsx","Components/UserInformation/LoveTrainings/LoveTrainings.jsx","Components/UserInformation/Schedule/Schedule.styled.jsx","Components/UserInformation/Schedule/Schedule.jsx","Components/UserInformation/Graphics/TrainingsGraphic.jsx","Components/UserInformation/VisibleTrainings/VisibleTrainings.styled.jsx","Components/UserInformation/VisibleTrainings/VisibleTrainings.jsx","Components/UserInformation/Subscription/Subscription.styled.jsx","Components/UserInformation/Subscription/BuySubscription/BuySubscription.styled.jsx","Components/UserInformation/Subscription/BuySubscription/BuySubscription.jsx","Components/UserInformation/Subscription/Subscription.jsx","Components/UserInformation/Visiting/Visiting.styled.jsx","Components/UserInformation/Visiting/Visiting.jsx","Components/UserInformation/Trainings/Trainings.styled.jsx","Components/UserInformation/Trainings/Trainings.jsx","Components/CoachInformation/TrainingsSchedule/TrainingsSchedule.styled.jsx","Components/CoachInformation/TrainingsSchedule/TrainingsSchedule.jsx","Components/CoachInformation/ScheduleAdmin/ScheduleAdmin.styled.jsx","Components/CoachInformation/ScheduleAdmin/ScheduleAdmin.jsx","Components/CoachInformation/TrainingView/TrainingView.styled.jsx","Components/CoachInformation/TrainingView/TrainingView.jsx","Components/UserInformation/Sliders/Sliders.jsx","Components/UserInformation/UserInformation.jsx","Pages/Cabinet/Cabinet.jsx","service/api.jsx","service/axios.users.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ContainerCabinet = styled.div`\n  margin-top: 70px;\n  padding: 5px;\n  /* border: 1px solid #ddd; */\n  /* border-radius: 8px;\n  border-color: inherit; */\n  /* background: linear-gradient(to right, #e66465, #9198e5); */\n  /* box-shadow: 0px 0px 8px 8px rgba(0, 0, 0, 0.5); */\n  /* margin-left: 10px;\n  margin-right: 10px; */\n`;\n\nexport const WelcomeUserName = styled.h2`\n  font-family: 'Times New Roman', Times, serif;\n  font-weight: 400;\n  font-size: 14px;\n  padding-left: 10px;\n  padding-top: 10px;\n  & span{\n    font-weight: 700;\n  }\n`;\n\nexport const WrapperInfoUser = styled.div`\n  border: 1px solid;\n  border-radius: 10px;\n  /* box-shadow: 0px 0px 2px 2px rgba(0, 0, 0, 0.2); */\n  box-shadow: 0px 0px 8px 8px rgba(0, 0, 0, 0.5);\n  background: linear-gradient(to right, #f18484, #a5aae9);\n  /* background-color: aquamarine; */\n  margin: 10px;\n  padding: 10px;\n  /* height: 500px; */\n`;\n\nexport const WrapperUserInfo = styled.div`\n  font-family: 'Times New Roman', Times, serif;\n  font-weight: 400;\n  font-size: 15px;\n  /* height: 100%; */\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 90px;\n  & div{\n    margin-left: 25px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const UserPhotoSize = styled.img`\n  /* width: 40px; */\n  border-radius: 50%;\n  background-color: #000000;\n`;\n\nexport const LinkRecord = styled(Link)`\n  color: #302929;\n  padding: 3px 3px;\n  background: linear-gradient(to right, #e66465, #9198e5); \n  border-radius: 5px;\n  font-weight: bold;\n  transition: background 0.3s;\n  border: #000000 1px solid;\n  text-align: center;\n  /* width: 90px; */\n  &:hover {\n    background: linear-gradient(to right, #9198e5, #e66465); \n  }\n`;\n\nexport const SettingsBTN = styled.button`\n  color: #302929;\n  padding: 3px 3px;\n  background: linear-gradient(to right, #e66465, #9198e5); \n  border-radius: 5px;\n  font-weight: bold;\n  transition: background 0.3s;\n  border: #000000 1px solid;\n  margin-top: 2px;\n  /* margin-left: 2px; */\n  /* text-align: center; */\n  /* width: 90px; */\n\n  &:hover {\n    background: linear-gradient(to right, #9198e5, #e66465); \n  }\n`;\n\nexport const BlockInfo = styled.div`\n  text-align: center;\n  margin-top: 10px;\n  /* height: 500px; */\n  /* overflow: hidden; */\n  & p{\n    margin-left: 5px;\n  }\n`;\n\nexport const ButtonShow = styled.button`\n  background: linear-gradient(to right, #ffa69e, #fbc7d4); \n  color: #fff;\n  \n  border: none;\n  border-radius: 4px;\n  padding: 10px 15px;\n  \n  font-size: 16px;\n  font-weight: bold;\n  \n  cursor: pointer;\n  transition: background 0.3s ease;\n  \n  &:hover {\n    background: linear-gradient(to right, #fbc7d4, #ffa69e); \n  }\n`;","import styled from \"styled-components\";\n\nexport const ContainerSettings = styled.div`\n  margin-top: 29px;\n  background: linear-gradient(135deg, #8ec5fc, #e0c3fc);\n  box-shadow: 3px 3px 10px rgba(0,0,0,0.3);\n  border-radius: 10px;\n  padding: 20px;\n`;\n\nexport const UserInformation = styled.div`\n  text-align: start;\n  /* display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: center; */\n  margin-top: 20px;\n  & div{\n    display: flex;\n    flex-direction: row;\n    justify-content: start;\n    align-items: center;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  background-color: inherit;\n  /* border: none; */\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 22px -10px rgba(128, 0, 0, 1);\n  /* width: 100px; */\n`;\n\nexport const SelectTrainings = styled.select`\n  background-color: inherit;\n  border-radius: 12px;\n  text-align: center;\n`;","import styled from \"styled-components\";\n\nexport const WrapperModal = styled.div`\n  position: absolute;\n  top: 250px;\n  left: 0;\n`;\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow: auto;\n\n`;\n\nexport const Modal = styled.div`\n  margin-top: 85px;\n  background: #dfc9c9;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n`;\n\nexport const ModalHeader = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  flex-direction: column;\n`;\n\nexport const CloseBTN = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin-top: -15px;\n  margin-right: -15px;\n  background: none;\n  border: none;\n  font-size: 18px;\n  cursor: pointer;\n`;\n\nexport const WrapperBTN = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 15px 15px;\n`;\n\nexport const OKbutton = styled.button`\n\tbox-shadow: 3px 4px 0px 0px #899599;\n\tbackground:linear-gradient(to bottom, #b6e6a7 5%, #32e132 100%);\n  margin-right: 20px;\n\tbackground-color:#ededed;\n\tborder-radius:15px;\n\tborder:1px solid #d6bcd6;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#272a2a;\n\tfont-family:Arial;\n\tfont-size:17px;\n\tpadding:7px 25px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #e1e2ed;\n\n  :hover {\n    background:linear-gradient(to bottom, #bab1ba 5%, #ededed 100%);\n    background-color:#bab1ba;\n  }\n  :active {\n    position:relative;\n    top:1px;\n}`;\n\nexport const NonButton = styled.button`\n\tbox-shadow: 3px 4px 0px 0px #8a2a21;\n\tbackground:linear-gradient(to bottom, #c62d1f 5%, #f24437 100%);\n\tbackground-color:#c62d1f;\n\tborder-radius:18px;\n\tborder:1px solid #d02718;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#ffffff;\n\tfont-family:Arial;\n\tfont-size:17px;\n\tpadding:7px 25px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #810e05;\n\n  :hover {\n    background:linear-gradient(to bottom, #f24437 5%, #c62d1f 100%);\n    background-color:#f24437;\n}\n  :active {\n    position:relative;\n    top:1px;\n}`;\n\nexport const InputStyle = styled.input`\n  background-color: inherit;\n  /* border: none; */\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 22px -10px rgba(128, 0, 0, 1);\n  margin: 5px;\n  height: 25px;\n  width: 100%;\n  /* width: 100px; */\n`;\n\nexport const SelectTrainings = styled.select`\n  background-color: inherit;\n  border-radius: 12px;\n  text-align: center;\n  width: 100%;\n  height: 35px;\n  border: 2px solid #4a4d53;\n  margin-top: 10px;\n`;\n\nexport const WrapperCoachTrainings = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  align-items: flex-start;\n  border: 1px solid;\n  border-radius: 12px;\n  margin: 5px;\n  padding: 5px;\n`;","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setUser } from '../Redux/userSlice';\nimport {\n  serverAPI,\n  // tgSandra\n} from './api';\n\nexport const OnGetAllSchedule = async () => {\n  try {\n    const result = await serverAPI.get(`/schedule`);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnAddDataSchedule = async (dataSchedule, translateDay) => {\n  const day = dataSchedule.day;\n  const time = dataSchedule.time;\n  const kindTraining = dataSchedule.kind_training;\n  if (day === '' || day === '-') {\n    return toast.error('Виберіть день тренування');\n  }\n  if (time === '' || time === '-') {\n    return toast.error('Виберіть час тренування');\n  }\n  if (kindTraining === '') {\n    return toast.error('Виберіть вид тренування');\n  }\n  try {\n    // console.log(dataSchedule)\n    const result = await serverAPI.post(`/schedule`, dataSchedule);\n    const coach = result.data.coach;\n    const kindTraining = result.data.kind_training;\n    const day = translateDay(result.data.day);\n    const time = result.data.time;\n    \n    toast.success(`Зміни внесено: \n    ${kindTraining} в \n    ${day} об \n    ${time} з \n    ${coach}`)\n    console.log(result.data);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const scheduleAPI = {\n  OnGetAllSchedule,\n  OnAddDataSchedule,\n};","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setUser } from '../Redux/userSlice';\nimport {\n  serverAPI,\n  // tgSandra\n} from './api';\n\nexport const OnGetKindTrainings = async () => {\n  try {\n    const result = await serverAPI.get(`/kindTrainings`);\n    // console.log(result);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnAddKindTrainings = async (kind) => {\n  // console.log(kind);\n  try {\n    const result = await serverAPI.post(`/kindTrainings`, kind);\n    // console.log(result);\n    const nameTraining = result.data.label;\n    toast.success(`${nameTraining} додано`);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnDeleteKindTrainings = async (dataSchedule) => {\n  try {\n    const result = await serverAPI.post(`/kindTrainings`, dataSchedule);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const kindTrainingsAPI = {\n  OnGetKindTrainings,\n  OnAddKindTrainings,\n  OnDeleteKindTrainings\n};","import React, { useEffect } from 'react';\nimport {\n  WrapperModal,\n  ModalOverlay,\n  Modal,\n  ModalHeader,\n  CloseBTN,\n  WrapperBTN,\n  OKbutton,\n  NonButton,\n  InputStyle,\n  SelectTrainings,\n  WrapperCoachTrainings\n} from './ModalView.styled';\nimport { MdOutlineDone } from \"react-icons/md\";\nimport { FaAngleDown, FaAngleUp  } from \"react-icons/fa\";\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { clientAPI } from '../../service/axios.users';\nimport { scheduleAPI } from '../../service/axios.schedule';\nimport { kindTrainingsAPI } from \"../../service/axios.kindTrainings\";\n\nconst translateDay = (day) => {\n  switch (day.toLowerCase()) {\n    case 'monday':\n      return 'понеділок';\n    case 'tuesday':\n      return 'вівторок';\n    case 'wednesday':\n      return 'середу';\n    case 'thursday':\n      return 'четвер';\n    case 'friday':\n      return 'п’ятницю';\n    case 'saturday':\n      return 'суботу';\n    case 'sunday':\n      return 'неділю';\n    default:\n      return day;\n  }\n};\n\nconst days = {\n  day1: 'monday',\n  day2: 'tuesday',\n  day3: 'wednesday',\n  day4: 'thursday',\n  day5: 'friday',\n  day6: 'saturday',\n  day7: 'sunday',\n};\n\nconst BoldIcon = ({ size, color }) => (\n  <MdOutlineDone\n    fill={color}\n    style={{\n      marginRight: '10px',\n      fontSize: size,\n      fontWeight: 'bold',\n    }}\n  />\n);\n\nconst pay = {\n  0: 0,\n  1: 100,\n  2: 200,\n  3: 200,\n  4: 250,\n  5: 250,\n  6: 250,\n  7: 300,\n  8: 300,\n  9: 300,\n  10: 350,\n  11: 350,\n  12: 350,\n}\n\nexport const ModalView = ({\n  handleClose,\n  show,\n  name_Coach,\n  time,\n  day,\n  kind_training,\n  selectedDay\n}) => {\n  const user = useSelector((state) => state.user);\n  const [completeRecord, setCompleteRecord] = useState(false);\n  const [completeRecordData, setCompleteRecordData] = useState('');\n  const [isDisable, setIsDisable] = useState(false);\n\n  const handleConfirmed = async (e, selectedDate) => {\n    e.preventDefault();\n    setIsDisable(true);\n\n  const options = { timeZone: 'Europe/Kiev', weekday: 'short', month: 'short', day: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZoneName: 'short' };\n\n  let selectedDateValue;\n\n  switch (selectedDate) {\n    case 'today':\n      selectedDateValue = new Date().toLocaleString('en-US', options);\n      break;\n    case 'tomorrow':\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      selectedDateValue = tomorrow.toLocaleString('en-US', options);\n      break;\n    case 'aftertomorrow':\n      const dayAfterTomorrow = new Date();\n      dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2);\n      selectedDateValue = dayAfterTomorrow.toLocaleString('en-US', options);\n      break;\n    default:\n      selectedDateValue = new Date().toLocaleString('en-US', options);\n      break;\n  }\n\n    let sendData = {\n      userID: user.id,\n      name_Coach: name_Coach,\n      kind: 'group',\n      time: time,\n      day: day,\n      kind_training: kind_training,\n      date: selectedDateValue\n    };\n\n    const result = await clientAPI.OnRecordTraining(sendData).then(result => { \n      if (result?.status === 200) {\n        setCompleteRecord(true);\n        setCompleteRecordData(result.data.newInfoUser);\n        // const user = useSelector((state) => state.user);\n        // const updatedUser = { ...user, user.seasonTickets.remainderOfTrainings: -1 };\n        // dispatch(setUser(updatedUser));\n        return;\n      } else {\n        setCompleteRecord(false);\n        setCompleteRecordData('');\n        return;\n      }\n    });\n    return result;\n  };\n\n  return (\n    <WrapperModal>\n      <div>\n        {show && (\n          <ModalOverlay>\n            <Modal>\n              {!completeRecord\n                ? \n                <>\n                  <ModalHeader>\n                    <h3>Ви підтверджуєте запис?</h3>\n                    <CloseBTN onClick={handleClose}>&times;</CloseBTN>\n                  </ModalHeader>\n                  <div>\n                    <p>\n                      {kind_training} об {time} в {translateDay(day)}\n                    </p>\n                  </div>\n                  <WrapperBTN>\n                    <OKbutton onClick={ (e) => handleConfirmed(e, selectedDay)} disabled={isDisable}>Так</OKbutton>\n                    <NonButton onClick={handleClose}>Ні</NonButton>\n                  </WrapperBTN>\n                </>\n                :\n              <>\n                <ModalHeader>\n                  <BoldIcon size={45} color='green' />\n                    <h3>Вітаємо!</h3>\n                    <p>Ви успішно записалися на тренування {completeRecordData.kind_training} в {translateDay(completeRecordData.day)} об {completeRecordData.time} до тренера {completeRecordData.coach} </p>\n                  <CloseBTN onClick={handleClose}>&times;</CloseBTN>\n                </ModalHeader>\n              </>}\n            </Modal>\n          </ModalOverlay>\n        )}\n      </div>\n    </WrapperModal>\n  );\n};\n\nexport const PasswordForm = ({ show, handleClose }) => {\n  const user = useSelector((state) => state.user);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  // const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    // console.log(e.target)\n    const { name, value } = e.target;\n    if (name === 'currentPassword') {\n      setCurrentPassword(value);\n    } else if (name === 'newPassword') {\n      setNewPassword(value);\n    } else if (name === 'confirmPassword') {\n      setConfirmPassword(value);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Перевірка, чи новий пароль співпадає з підтвердженням\n    if (newPassword !== confirmPassword) {\n      setMessage('Паролі не співпадають');\n      return;\n    }\n    const userID = user.id;\n    await clientAPI.OnUpgradeUserPassword({ id: userID , currentPassword: currentPassword, newPassword: newPassword})\n    // OnGetUserPassword\n\n    setCurrentPassword('');\n    setNewPassword('');\n    setConfirmPassword('');\n    setMessage('Пароль змінено успішно');\n  };\n\n  if (show) {\n    return (\n      <WrapperModal>\n        <div>\n        <ModalOverlay style={{justifyContent: 'center'}}>\n          <Modal style={{ margin: '15px'}}>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'start' }}>\n              <p>Зміна паролю</p>\n              {/* <CloseBTN onClick={handleClose}>&times;</CloseBTN> */}\n              <form onSubmit={handleSubmit}>\n                <div>\n                  {/* <label htmlFor=\"currentPassword\">Поточний пароль:</label> */}\n                  <InputStyle\n                    type=\"password\"\n                    id=\"currentPassword\"\n                    name=\"currentPassword\"\n                    placeholder='Поточний пароль'\n                    value={currentPassword}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n                <div>\n                  {/* <label htmlFor=\"newPassword\">Новий пароль:</label> */}\n                  <InputStyle\n                    type=\"password\"\n                    id=\"newPassword\"\n                    name=\"newPassword\"\n                    placeholder='Новий пароль'\n                    value={newPassword}\n                    onChange={handleChange}\n                    required\n                  />\n                </div>\n                <div>\n                  {/* <label htmlFor=\"confirmPassword\">Підтвердження нового паролю:</label> */}\n                  <InputStyle\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    placeholder='Підтвердження нового паролю'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    required\n                  />\n            </div>\n              <WrapperBTN>\n                <OKbutton type=\"submit\">Змінити пароль</OKbutton>\n                <NonButton onClick={handleClose}>Відмінити</NonButton>\n              </WrapperBTN>\n              </form>\n              {message && <p>{message}</p>}\n            </div>\n          </Modal>\n          </ModalOverlay>\n        </div>\n      </WrapperModal>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const ModalViewBuySubscription = ({\n  handleShowModal\n}) => {\n  const user = useSelector((state) => state.user);\n  const dataSeasonTickets = useSelector((state) => state.seasonTickets);\n  const group = dataSeasonTickets.seasonTickets.filter(item => item.kind === 'group');\n  const personalDance = dataSeasonTickets.seasonTickets.filter(item => item.kind === 'personal' && item.includes.includes('High Heels'));\n  const personalHard = dataSeasonTickets.seasonTickets.filter(item => item.kind === 'personal' && item.includes.includes('Sky jumping'));\n  const allKindSeasonTickets = [\n    {\n        name: 'Групові заняття',\n        result: group,\n    },\n    {\n        name: 'Персональні тренування (танцювальні напрямки)',\n        result: personalDance,\n    },\n    {\n        name: 'Персональні тренування (силові напрямки)',\n        result: personalHard,\n    }\n  ];\n\n  const [selectedKindTraining, setSelectedKindTraining] = useState('');\n  const [selectedSeasonTicket, setSelectedSeasonTicket] = useState('');\n  const [buySeasonTicket, setBuySeasonTicket] = useState(false);\n\n  const chooseKind = allKindSeasonTickets.filter(item => item.name === selectedKindTraining);\n\n  const handleChooseSeasonTicket = async (e) => {\n    e.preventDefault();\n\n    let findSeasonTicket = chooseKind.find(items => items.name === selectedKindTraining);\n    let seasonTicket = findSeasonTicket.result.find(item => item._id === selectedSeasonTicket);\n\n    let userDataSeasonTicket = {\n      seasonTicket: seasonTicket,\n      dateChoose: new Date(),\n      user: {\n        id: user.id,\n        name: user.name,\n        surname: user.surname,\n        tel: user.tel,\n        instagram: user.instagram\n      }\n    };\n    // await clientAPI.OnSendTgBuySeasonTicket(userDataSeasonTicket);\n    const result = await clientAPI.OnBuySeasonTicket(userDataSeasonTicket);\n    if (result) {\n      return setBuySeasonTicket(true);\n    }\n    return result;\n  }\n  \n  return (\n    <WrapperModal>\n      <div>\n          <ModalOverlay>\n          <Modal>\n            {!buySeasonTicket \n            ?\n            <>\n              <ModalHeader>\n                <h3>Оберіть абонемент для покупки</h3>\n                <CloseBTN onClick={handleShowModal}>&times;</CloseBTN>\n              </ModalHeader>\n            <div>\n              <SelectTrainings\n                value={selectedKindTraining}\n                onChange={(e) => setSelectedKindTraining(e.target.value)}>\n                <option\n                  style={{ backgroundColor: '#d6aaaa' }}\n                  value=\"\"\n                >Обери вид абонементу</option>\n              {dataSeasonTickets ?\n                allKindSeasonTickets.map((item, index) => (\n                  <option\n                    key={index}\n                    value={item.name}\n                    style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                  >{item.name}</option>\n                )) : <></>}\n              </SelectTrainings>\n                <SelectTrainings\n                  value={selectedSeasonTicket}\n                onChange={(e) => setSelectedSeasonTicket(e.target.value)}>\n                {chooseKind.length > 0 \n                  ? \n                  <option\n                    style={{ backgroundColor: '#d6aaaa' }}\n                    value=\"\"\n                >\n                  Обери кількість тренувань\n                  </option>\n                  : \n                  <option\n                    style={{ backgroundColor: '#d6aaaa' }}\n                    value=\"\"\n                >\n                  Спочатку обери вид абонементу\n                </option>}\n                {chooseKind ?\n                  chooseKind.map((items) => (items.result.map((item, index) =>\n                    <option\n                      key={index}\n                      value={item._id}\n                      style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                    >{item.name}, {item.price} грн.</option>\n                  ))): <></>}</SelectTrainings>\n              </div>\n              <WrapperBTN>\n                <OKbutton onClick={handleChooseSeasonTicket}>Придбати</OKbutton>\n                <NonButton onClick={handleShowModal}>Буду жирним</NonButton>\n              </WrapperBTN>\n            </>\n            :\n              <>\n                <ModalHeader>\n                  <BoldIcon size={45} color='green' />\n                  <h3>Вітаємо!</h3>\n                  <p>Інформація передана адміністрації та найближчим часом з Вами зв'яжуться.\n                    Після підтвердження абонемент буде відображатися в особистому кабінеті</p>\n                <CloseBTN onClick={handleShowModal}>&times;</CloseBTN>\n              </ModalHeader>\n              </>}\n            </Modal>\n          </ModalOverlay>\n      </div>\n    </WrapperModal>\n  );\n};\n\nexport const ModalViewCoachSalary = ({\n  dateRanges, selectedCoach, dataCoachTrainings, handleCloseModal\n}) => {\n  // const user = useSelector((state) => state.user);\n  const [showUsers, setShowUsers] = useState(false); \n  const [selectedTrainingIndex, setSelectedTrainingIndex] = useState(''); \n  \n  // const startDate = dateRanges.\n  const selectedDates = dateRanges[selectedCoach];\n  const startDate = new Date(selectedDates.startDate).toLocaleDateString('uk-UA');\n  const endDate = new Date(selectedDates.endDate).toLocaleDateString('uk-UA');\n\n  useEffect(() => {\n    document.getElementById('canceled')\n  })\n\n  console.log(dataCoachTrainings);\n\n  const countTrainingsUsers = (value, status) => {\n    if (!value || !value.users || !Array.isArray(value.users)) {\n      return 0;\n    }\n    const usersCount = value.users.reduce((acc, user) => {\n      if ((status === 'cancel' && user.trainingCanceled === true) || \n          (status === 'visit' && user.trainingVisit === true)) {\n        return acc + 1;\n      }\n      return acc;\n    }, 0);\n    return usersCount;\n  };\n\n  const handleShowUsers = (e, index) => {\n    e.preventDefault();\n    setSelectedTrainingIndex(index)\n    setShowUsers(!showUsers);\n  }\n\n  const countSalaryCoach = (value, status) => {\n    if (!value || !value.users || !Array.isArray(value.users)) {\n      return {};\n    }\n    const usersCount = value.users.reduce((acc, user) => {\n      if (status === 'cancel' && user.trainingCanceled === false) {\n        acc++;\n      }\n      return acc;\n    }, 0);\n    // console.log( pay[usersCount])\n    return pay[usersCount];\n    // return { [usersCount]: pay[usersCount] };\n  };\n\n  const totalSalary = Object.values(dataCoachTrainings).reduce((acc, value) => {\n    return acc + countSalaryCoach(value, 'cancel');\n  }, 0);\n  // console.log(totalSalary);\n\n  return (\n    <WrapperModal>\n      <div>\n        <ModalOverlay>\n          <Modal>\n            <ModalHeader>\n              <p>Оплата тренеру {selectedCoach} за період з {startDate} по {endDate} становить {totalSalary} грн.</p>\n              <CloseBTN onClick={handleCloseModal}>&times;</CloseBTN>\n            </ModalHeader>\n            <div>\n              {Object.entries(dataCoachTrainings).map(([key, value], index) => (\n                <WrapperCoachTrainings key={key}>\n                  <p>Дата: {new Date(value.training.date).toLocaleDateString('uk-UA')}</p>\n                  <p>Вид тренування: {value.training.kind_training}</p>\n                  <p>ЗП: {countSalaryCoach(value, 'cancel')} грн.</p>\n                  <p>Час: {value.training.time}</p>\n                  {/* <p>{value.training.users}</p> */}\n                  <p>\n                    Кількість клієнтів: {value.users.length}  \n                    &nbsp;(<span className={countTrainingsUsers(value, 'cancel') > 0 ? \"canceledTrainings\" : \"\"}>\n                      {countTrainingsUsers(value, 'cancel')}\n                    </span>)\n                    &nbsp;(<span className={countTrainingsUsers(value, 'visit') > 0 ? \"visitedTrainings\" : \"\"}>\n                      {countTrainingsUsers(value, 'visit')}\n                    </span>)\n                  </p>\n                  {showUsers && selectedTrainingIndex === index ?\n                    <FaAngleUp onClick={(e) => handleShowUsers(e, index)} /> :\n                    <FaAngleDown onClick={(e) => handleShowUsers(e, index)} />}\n                  {showUsers && selectedTrainingIndex === index &&\n                    value.users.map((item, index) => (\n                      <div key={index}>\n                        <p className=\n                          {item.trainingCanceled === true ? \"canceledTrainings\" : \"\"\n                            || \n                           item.trainingVisit === true ?  \"visitedTrainings\" : \"\"}>\n                          {item.name} {item.surname}</p>\n                      </div>\n                    ))\n                  }\n                </WrapperCoachTrainings>\n              ))}\n            </div>\n          </Modal>\n        </ModalOverlay>\n      </div>\n    </WrapperModal>\n  );\n\n};\n\nexport const ModalViewAddSchedule = ({\n  openChangeSchedule,\n  dataCoach,\n  time,\n  kindTrainingData\n}) => {\n  // const user = useSelector((state) => state.user);\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedDay, setSelectedDay] = useState('');\n  const [selectedKindTraining, setSelectedKindTraining] = useState('');\n  const [selectedCoach, setSelectedCoach] = useState('');\n  // console.log(dataCoach)\n  \n  const sendDataSchedule = async () => {\n    const data = {\n      id: selectedDay + selectedTime,\n      day: selectedDay,\n      time: selectedTime,\n      kind_training: selectedKindTraining,\n      coach: selectedCoach\n    }\n    // console.log(data);\n    const sendData = await scheduleAPI.OnAddDataSchedule(data, translateDay);\n    return sendData;\n  }\n  \n  return (\n    <WrapperModal>\n      <div>\n        <ModalOverlay>\n          <Modal>\n            <ModalHeader>\n              <h3>Виберіть, що необхідно змінити</h3>\n              <CloseBTN onClick={() => openChangeSchedule()}>&times;</CloseBTN>\n            </ModalHeader>\n            <div style={{marginBottom: '15px'}}>\n              <SelectTrainings\n                value={selectedDay}\n                onChange={(e) => setSelectedDay(e.target.value)}\n              >\n                <option\n                  style={{ backgroundColor: '#d6aaaa' }}\n                  value=\"-\"\n                >Обери день</option>\n                {days ?\n                  Object.values(days).map((item, index) => (\n                    <option\n                      key={index}\n                      value={item}\n                      style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                    >{translateDay(item)}</option>\n                  )) : <></>}\n              </SelectTrainings>\n              <SelectTrainings\n                value={selectedTime}\n                onChange={(e) => setSelectedTime(e.target.value)}\n              >\n                <option\n                  style={{ backgroundColor: '#d6aaaa' }}\n                  value=\"-\"\n                >Обери час</option>\n                {time ?\n                  Object.values(time).map((item, index) => (\n                    <option\n                      key={index}\n                      value={item}\n                      style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                    >{item}</option>\n                  )) : <></>}\n              </SelectTrainings>\n              <SelectTrainings\n                value={selectedKindTraining}\n                onChange={(e) => setSelectedKindTraining(e.target.value)}\n              >\n                <option\n                  style={{ backgroundColor: '#d6aaaa' }}\n                  value=\"-\"\n                >Обери вид тренування</option>\n                {kindTrainingData ?\n                  kindTrainingData.map((item, index) => (\n                    <option\n                      key={index}\n                      value={item.value}\n                      style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                    >{item.label}</option>\n                  )) : <></>}\n              </SelectTrainings>\n              <SelectTrainings\n                value={selectedCoach}\n                onChange={(e) => setSelectedCoach(e.target.value)}\n              >\n                <option\n                  style={{ backgroundColor: '#d6aaaa' }}\n                  value=\"-\"\n                >Обери тренера</option>\n                {dataCoach ?\n                  dataCoach.map((item, index) => (\n                    <option\n                      key={index}\n                      value={item.labelAuth}\n                      style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                    >{item.labelAuth}</option>\n                  )) : <></>}\n              </SelectTrainings>\n            </div>\n              <OKbutton onClick={sendDataSchedule}>Відправити зміни</OKbutton>\n          </Modal>\n        </ModalOverlay>\n      </div>\n    </WrapperModal>\n  );\n};\n\nexport const ModalViewAddKindTraining = ({\n  openAddKindTraining,\n}) => {\n  // const user = useSelector((state) => state.user);\n  const [inputKind, setInputKind] = useState('');\n  const [inputKindID, setInputKindID] = useState('');\n  // console.log(dataCoach)\n  \n  const addKindTraining = async () => {\n    const kindSend = {\n      id: inputKindID,\n      value: inputKind,\n      label: inputKind,\n    };\n    await kindTrainingsAPI.OnAddKindTrainings(kindSend);\n  };\n\n  \n  return (\n    <WrapperModal>\n      <div>\n        <ModalOverlay>\n          <Modal>\n            <ModalHeader>\n              <h3>Введіть дані нового виду тренування</h3>\n              <CloseBTN onClick={() => openAddKindTraining()}>&times;</CloseBTN>\n            </ModalHeader>\n            <div>\n              <p>Назва тренування:</p>\n              <InputStyle\n                type=\"text\"\n                value={inputKind}\n                onChange={(e) => setInputKind(e.target.value)}\n                placeholder=\"Вид тренування\"\n              />\n              <p>ID тренування</p>\n              <InputStyle\n                type=\"text\"\n                value={inputKindID}\n                onChange={(e) => setInputKindID(e.target.value)}\n                placeholder=\"ID тренування\"\n              />\n              <OKbutton onClick={addKindTraining}>Додати</OKbutton>\n\n            </div>\n              {/* <OKbutton onClick={sendDataSchedule}>Відправити зміни</OKbutton> */}\n          </Modal>\n        </ModalOverlay>\n      </div>\n    </WrapperModal>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { BsTelegram } from \"react-icons/bs\";\nimport { PiPencilSlash, PiPencilSimple } from \"react-icons/pi\";\nimport { MdDone } from \"react-icons/md\";\nimport {\n  ContainerSettings,\n  UserInformation,\n  InputStyle,\n} from './Settings.styled';\nimport { useState } from 'react';\nimport { setUser } from '../../../Redux/userSlice';\nimport { PasswordForm } from '../../ModalView/ModalView';\nimport { clientAPI } from '../../../service/axios.users';\n\nconst Settings = () => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState({\n    openChangeName: false,\n    openChangeSurname: false,\n    openChangePassword: false,\n    openChangeInstagram: false,\n    openChangeTrainingPopular: false,\n    newName: user.name,\n    newSurname: user.surname,\n    newPassword: user.password,\n    newInstagram: user.instagram,\n    newTrainingPopular: user.trainings.popular,\n  });\n\n  const toggleField = (fieldName) => {\n    const updatedFormData = {\n      ...formData,\n      openChangeName: false,\n      openChangeSurname: false,\n      openChangePassword: false,\n      openChangeInstagram: false,\n      openChangeTrainingPopular: false,\n    };\n    updatedFormData[fieldName] = !formData[fieldName];\n    setFormData(updatedFormData);\n  };\n\n  const handleSave = async (field, value) => {\n    if (field === \"trainings.popular\") {\n      const updatedUser = { ...user, trainings: { ...user.trainings, popular: value } };\n      dispatch(setUser(updatedUser));\n    } else {\n      const updatedUser = { ...user, [field]: value };\n      dispatch(setUser(updatedUser));\n      const id = user.id;\n      await clientAPI.OnUpgradeUser({id: id, [field]: value});\n    }\n\n    toggleField(`openChange${field.charAt(0).toUpperCase() + field.slice(1)}`);\n  };\n\n\n  // const uniqueTrainingList = Array.from(new Set(schedule.map(item => item.kind_trainee))).filter(item => item !== '-');\n\n  return (\n    <ContainerSettings>\n      <h3>Налаштування:</h3>\n      <UserInformation>\n        <div>\n          <p>Ім'я:</p>\n          {formData.openChangeName ? (\n            <InputStyle\n              type=\"text\"\n              value={formData.newName}\n              onChange={(e) => setFormData({ ...formData, newName: e.target.value })}\n            />\n          ) : (\n            <p>{user.name}</p>\n          )}\n          {formData.openChangeName ? (\n            <MdDone color='green' onClick={() => handleSave('name', formData.newName)} style={{marginLeft: '7px'}}/>\n          ) : (\n            <PiPencilSimple color='#c77171' onClick={() => toggleField('openChangeName')} style={{marginLeft: '7px'}}/>\n          )}\n        </div>\n        <div>\n          <p>Прізвище:</p>\n          {formData.openChangeSurname ? (\n            <InputStyle\n              type=\"text\"\n              value={formData.newSurname}\n              onChange={(e) => setFormData({ ...formData, newSurname: e.target.value })}\n            />\n          ) : (\n            <p>{user.surname === 'Відсутні дані' ? '-' : user.surname}</p>\n          )}\n          {formData.openChangeSurname ? (\n            <MdDone color='green' onClick={() => handleSave('surname', formData.newSurname)} style={{marginLeft: '7px'}}/>\n          ) : (\n            <PiPencilSimple color='#c77171' onClick={() => toggleField('openChangeSurname')} style={{marginLeft: '7px'}}/>\n          )}\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n          <div>\n          <p>Пароль: ****</p>\n          {formData.openChangePassword ? <PasswordForm show={formData.openChangePassword} handleClose={() => toggleField('openChangePassword')} /> : ''}\n          {formData.openChangePassword ? (\n            <MdDone color='green' onClick={() => handleSave('password', formData.newPassword)} style={{marginLeft: '7px'}}/>\n          ) : (\n            <PiPencilSimple color='#c77171' onClick={() => toggleField('openChangePassword')} style={{marginLeft: '7px'}}/>\n            )}\n          </div>\n        </div>\n        <div>\n          <p>Telegram bot:</p>\n          <p>{user.telegramBot.number === null || 'Відсутні дані' || 0 ?\n            <><BsTelegram color='red' size={11} style={{marginRight: '7px'}}/>{user.telegramBot.number || '-'}</>\n            : <><BsTelegram size={11} color='green' style={{marginRight: '7px'}}/>\n              {user.telegramBot.number || '-'}</>\n            }</p>\n            <PiPencilSlash color='red' style={{marginLeft: '7px'}}/>\n        </div>\n        <div>\n          <p>Instagram:</p>\n          {formData.openChangeInstagram ? (\n            <InputStyle\n              type=\"text\"\n              value={formData.newInstagram}\n              onChange={(e) => setFormData({ ...formData, newInstagram: e.target.value })}\n            />\n          ) : (\n            <p>{user.instagram}</p>\n          )}\n          {formData.openChangeInstagram ? (\n            <MdDone color='green' onClick={() => handleSave('instagram', formData.newInstagram)} style={{marginLeft: '7px'}}/>\n          ) : (\n            <PiPencilSimple color='#c77171' onClick={() => toggleField('openChangeInstagram')} style={{marginLeft: '7px'}}/>\n          )}\n        </div>\n        {/* <div>\n          <p>Улюблене тренування:</p>\n          {formData.openChangeTrainingPopular ? (\n            <>\n              <SelectTrainings\n                value={formData.newTrainingPopular}\n                onChange={(e) => setFormData({ ...formData, newTrainingPopular: e.target.value })}>\n                <option\n                  style={{ backgroundColor: '#d6aaaa' }}\n                  value=\"\"\n                >Обери</option>\n                {uniqueTrainingList.map((item, index) => (\n                  <option\n                    key={index}\n                    value={item}\n                    style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n                  >{item}</option>\n              ))}</SelectTrainings>\n            </>\n          ) : (\n            <p>{user.trainings.popular === 0 ? '-' : user.trainings.popular}</p>\n          )}\n          {formData.openChangeTrainingPopular ? (\n            <MdDone color='green' onClick={() => handleSave('trainings.popular', formData.newTrainingPopular)} style={{marginLeft: '7px'}}/>\n          ) : (\n            <PiPencilSimple color='#c77171' onClick={() => toggleField('openChangeTrainingPopular')} style={{marginLeft: '7px'}}/>\n          )}\n        </div> */}\n      </UserInformation>\n    </ContainerSettings>\n  );\n};\n\nexport default Settings;\n","import styled from \"styled-components\";\n\nexport const WrapperInfoSlider = styled.div`\n  width: 320px;\n  height: 530px;\n  overflow: auto;\n\n// export const WrapperRecord = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(5, 1fr);\n//   grid-template-rows: repeat(5, 1fr);\n//   grid-column-gap: 0px;\n//   grid-row-gap: 0px;\n//   & .div1 { grid-area: 1 / 1 / 2 / 2; }\n//     .div2 { grid-area: 1 / 5 / 2 / 6; }\n// `;\n\n// export const WrapperRecord = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   justify-content: space-around;\n// `;\n\n// export const RecordBTN = styled.button`\n  \n// `;\n","import styled from \"styled-components\";\n\nexport const WrapperInfoSlider = styled.div`\n  width: 320px;\n  height: 230px;\n`;\n\nexport const WrapperRecord = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const LovelyTrainingName = styled.span`\n  font-weight: 700;\n  font-size: 20px;\n  color: #6a1515;\n`;\n\nexport const RecordBTN = styled.button`\n  border-radius: 12px;\n  margin: 2px;\n  /* width: 101px; */\n  height: 50px;\n  background-color: #d7d0d0;\n  box-shadow: 0px 0px 12px 0px rgba(128, 0, 0, 1);\n`;","import schedule from '../../../assets/schedule.json';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  WrapperInfoSlider,\n  WrapperRecord,\n  Title,\n  LovelyTrainingName,\n  RecordBTN\n} from './LoveTrainings.styled';\nimport {ModalView} from '../../ModalView/ModalView';\n\nconst LoveTrainings = () => {\n  const user = useSelector((state) => state.user);\n  const [show, setShow] = useState(false);\n  const [userID, setUserID] = useState();\n  const [name_Coach, setName_Coach] = useState();\n  const [time, setTime] = useState();\n  const [day, setDay] = useState();\n  const [kind_training, setKind_training] = useState();\n\n  const handleClose = () => { return setShow(false) };\n\n  const favoriteTrainingsUser = (schedule, popular) => {\n    const filterTrainings = schedule.filter((item) => item.kind_training !== '-' && item.kind_training === popular);\n    const reformDayOfWeek = () => {\n      const today = new Date().getDay();\n      const dayOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\n      return dayOfWeek.reduce((result, day, index) => {\n        const offset = (index - today + 7) % 7;\n        result[offset] = day;\n        return result;\n      }, {});\n    };\n\n    const sortingTraining = {\n      firstDay: filterTrainings.filter((item) => item.day === reformDayOfWeek()[0]),\n      secondDay: filterTrainings.filter((item) => item.day === reformDayOfWeek()[1]),\n    };\n    // console.log(sortingTraining);\n    return sortingTraining;\n  };\n\n  const todayTrainings = favoriteTrainingsUser(schedule, user.trainings.popular).firstDay;\n  const tomorrowTrainings = favoriteTrainingsUser(schedule, user.trainings.popular).secondDay;\n  // console.log(todayTrainings)\n\n  const NonLoveTraining = () => {\n    return (\n      <>\n        <p>У Вас поки відсутнє улюблене тренування</p>\n      </>\n    )\n  }\n\n  const NonTrainings = () => {\n    return (\n      <div style={{width: '100px'}}>\n        <p>На жаль відсутні тренування найближчим часом</p>\n      </div>\n    )\n  }\n\n  const handleRecordTraining = (userID, name_Coach, time, day, kind_training) => {\n    // const currentDate = new Date();\n    // const timeZone = 'Europe/Kiev';\n    // const localTime = new Intl.DateTimeFormat('en-US', { timeZone }).format(currentDate);\n    // const hours = currentDate.getHours();\n    // const minutes = currentDate.getMinutes();\n    // const timeRecord = localTime + hours + minutes;\n\n    if (kind_training === '-') {\n      return null;\n    }\n\n    console.log(userID, name_Coach, time, day, kind_training)\n    setUserID(userID);\n    setName_Coach(name_Coach);\n    setTime(time);\n    setDay(day);\n    setKind_training(kind_training);\n    setShow(true)\n  }\n  // console.log(user.trainings.visit.length)\n  return (\n    <WrapperInfoSlider>\n      <Title>Запис на улюблене тренування \n        {user.trainings.visit.length === 0 || user.trainings.visit.length === undefined\n          ?\n          \"\"\n          :\n          <LovelyTrainingName> {user.trainings.popular}</LovelyTrainingName>}\n      </Title>\n        <p style={{ fontSize: '12px', fontWeight: '400'}}>(формується автоматично на основі найчастіше відвідуваних занять)</p>\n      {show && <ModalView \n        handleClose={handleClose}\n        show={show}\n        userID={userID}\n        name_Coach={name_Coach}\n        time={time}\n        day={day}\n        kind_training={kind_training}\n      />}\n      {user.trainings.visit?.length === 0 || user.trainings.visit.length === undefined ? <NonLoveTraining />\n        :\n        <WrapperRecord>\n          <div style={{\n            display: 'flex',\n            flexDirection: 'column'\n          }}>\n            <p>Сьогодні</p>\n            {todayTrainings.length > 0 ? todayTrainings.map((item, index) => (\n              <RecordBTN\n                onClick={() => handleRecordTraining(user.id, item.name_Coach, item.time, item.day, item.kind_training)}\n                key={index}\n              >\n                {item.kind_training}&nbsp;\n                {item.time}\n              </RecordBTN>\n            )) : <NonTrainings />}\n          </div>\n          <div style={{\n            display: 'flex',\n            flexDirection: 'column'\n          }}>\n            <p>Завтра</p>\n            {tomorrowTrainings.length > 0 ? tomorrowTrainings.map((item, index) => (\n              <RecordBTN\n                onClick={() => handleRecordTraining(user.id, item.name_Coach, item.time, item.day, item.kind_training)}\n                key={index}\n              >\n                {item.kind_training}&nbsp;\n                {item.time}\n              </RecordBTN>\n            )) : <NonTrainings />}\n          </div>\n        </WrapperRecord>\n      }\n    </WrapperInfoSlider>\n  )\n};\n\nexport default LoveTrainings;","import styled from \"styled-components\";\n\nexport const WrapperInfoSlider = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  overflow: scroll;\n  width: 100%;\n  /* height: 400px; */\n  /* padding: 2px;\n  margin: 4px; */\n`;\n\nexport const RecordBTN = styled.button`\n  border-radius: 12px;\n  margin: 2px;\n  width: 101px;\n  height: 50px;\n  background-color: #d7d0d0;\n  box-shadow: 0px 0px 12px 0px rgba(128, 0, 0, 1);\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  WrapperInfoSlider,\n  RecordBTN,\n  Title\n} from './Schedule.styled';\n// import schedule from '../../../assets/schedule.json';\nimport { useState, useEffect } from 'react';\nimport { ModalView } from '../../ModalView/ModalView';\nimport { scheduleAPI } from \"../../../service/axios.schedule\";\n\nconst Schedule = () => {\n  const user = useSelector((state) => state.user);\n  const [scheduleData, setScheduleData] = useState([]);\n  const [userID, setUserID] = useState();\n  const [name_Coach, setName_Coach] = useState();\n  const [time, setTime] = useState();\n  const [day, setDay] = useState();\n  const [kind_training, setKind_training] = useState();\n  const [show, setShow] = useState(false);\n  const [selectedDay, setSelectedDay] = useState('');\n  const handleClose = () => { return setShow(false) };\n\n  const reformSchedule = (schedule) => {\n    const today = new Date().toLocaleString('en-us', { weekday: 'long' });\n    const dayOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    const timeOfDay = ['08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00'];\n\n    const todayIndex = dayOfWeek.indexOf(today.toLowerCase());\n    const sortedTraining = {};\n\n    for (let i = 0; i < dayOfWeek.length; i++) {\n        const dayIndex = (i + todayIndex) % 7;\n        const currentDay = dayOfWeek[dayIndex];\n        const dayTrainings = {};\n\n        timeOfDay.forEach((time) => {\n            const trainings = schedule.filter((item) => item.day === currentDay && item.time === time);\n            if (trainings.length > 0) {\n                dayTrainings[time] = trainings;\n            }\n        });\n\n        sortedTraining[currentDay] = dayTrainings;\n    }\n\n    const threeDays = {};\n    const dayIndex = dayOfWeek.indexOf(today.toLowerCase());\n\n    for (let i = 0; i < 3; i++) {\n        const currentDayIndex = (dayIndex + i) % 7;\n        const currentDay = dayOfWeek[currentDayIndex];\n        threeDays[`Day${i + 1}`] = sortedTraining[currentDay];\n    }\n\n    return threeDays;\n  };\n\n  const getDataSchedule = async () => {\n    return await scheduleAPI.OnGetAllSchedule();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getDataSchedule();\n      setScheduleData(Array.isArray(result) ? result : []);\n    };\n    fetchData();\n  }, []);\n\n  const reformedSchedule = reformSchedule(scheduleData);\n  const scheduleToday = reformedSchedule.Day1;\n  const scheduleTomorrow = reformedSchedule.Day2;\n  const scheduleDayAfterTomorrow = reformedSchedule.Day3;\n\n  const handleRecordTraining = (userID, name_Coach, time, day, kind_training, dayInfo) => {\n    if (kind_training === '-') {\n      return null;\n    }\n    setUserID(userID);\n    setName_Coach(name_Coach);\n    setTime(time);\n    setDay(day);\n    setKind_training(kind_training);\n    setShow(true);\n    setSelectedDay(dayInfo);\n  }\n  \n  return (\n    <div>\n      <Title>Записатися на:</Title>\n      <WrapperInfoSlider>\n        {show && <ModalView \n          handleClose={handleClose}\n          show={show}\n          userID={userID}\n          name_Coach={name_Coach}\n          time={time}\n          day={day}\n          kind_training={kind_training}\n          selectedDay={selectedDay}\n        />}\n        <div>\n          <p>Сьогодні</p>\n          {Object.keys(scheduleToday).map((time) => (\n            <div key={time}>\n              {scheduleToday[time] && scheduleToday[time].map((item, index) => (\n                <RecordBTN\n                  onClick={() => handleRecordTraining(user.id, item.name_Coach, item.time, item.day, item.kind_training, 'today')}\n                  key={index}>\n                  {item.kind_training !== '-' ? `${item.kind_training} ${item.time}` : item.kind_training}\n                </RecordBTN>\n              ))}\n            </div>\n          ))}\n\n        </div>\n        <div>\n          <p>Завтра</p>\n          {Object.keys(scheduleTomorrow).map((time) => (\n            <div key={time}>\n              {scheduleTomorrow[time].map((item, index) => (\n                <RecordBTN\n                  onClick={() => handleRecordTraining(user.id, item.name_Coach, item.time, item.day, item.kind_training, 'tomorrow')}\n                  key={index}>\n                  {item.kind_training !== '-' ? `${item.kind_training} ${item.time}` : item.kind_training}\n                </RecordBTN>\n              ))}\n            </div>\n          ))}\n        </div>\n        <div>\n          <p>Післязавтра</p>\n          {Object.keys(scheduleDayAfterTomorrow).map((time) => (\n            <div key={time}>\n              {scheduleDayAfterTomorrow[time].map((item, index) => (\n                <RecordBTN\n                  onClick={() => handleRecordTraining(user.id, item.name_Coach, item.time, item.day, item.kind_training, 'aftertomorrow')}\n                  key={index}>\n                  {item.kind_training !== '-' ? `${item.kind_training} ${item.time}` : item.kind_training}\n                </RecordBTN>\n              ))}\n            </div>\n          ))}\n        </div>\n      </WrapperInfoSlider>\n    </div>\n  );\n};\n\nexport default Schedule;\n","import { ResponsivePie } from '@nivo/pie';\nexport const VisitTrainingsGraphic = ({ data, info }) => (\n  <ResponsivePie \n    // data={console.log(data)}\n    data={data}\n    margin={{ top: -20, right: 140, bottom: 0, left: 10 }}\n    // margin={{ top: 80, right: 10, bottom: 80, left: 10 }}\n    innerRadius={0.1} // центральний радиус\n    padAngle={2} // расстояние между секциями\n    cornerRadius={2} // заокруглённость\n    // sortByValue={true}\n    activeOuterRadiusOffset={6} // видиление жирным при выборе\n    borderWidth={0.1} // видиление жирным при выборе бордера\n    colors={{ scheme: 'set1' }}\n    // borderColor={'#000000'}\n    borderColor={{\n      from: 'color',\n      modifiers: [\n          ['darker', .6],\n          ['opacity', .5]\n      ]\n    }}\n    arcLinkLabelsSkipAngle={0} // не исчезает с 0 или исчезает с какого-то значения\n    enableArcLinkLabels={false} // включает акри внутри круга\n    motionConfig={'slow'} // animation\n    onClick={info}\n    // arcLabel={e => e.id + \" (\" + e.value + \")\"}\n    arcLabel='value'\n    legends={[\n      {\n        anchor: 'right',\n        direction: 'column',\n        justify: false,\n        translateX: 130,\n        translateY: 0,\n        itemWidth: 115,\n        itemHeight: 20,\n        itemsSpacing: -4,\n        symbolSize: 15,\n        itemDirection: 'left-to-right'\n      }\n      \n    ]}\n  />\n);","import styled from \"styled-components\";\n\nexport const ContainerTrainings = styled.div`\n  overflow: auto;\n  height: 200px;\n  background: linear-gradient(to right, #e66465, #9198e5);\n`;\n\nexport const WrapperTraining = styled.div`\n  /* position: fixed;\n  top: 450px; */\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border: 1px solid;\n  padding: 8px;\n  transition: background-color 0.3s;\n  background: linear-gradient(to right, #e66465, #9198e5);\n  /* width: 306px; */\n\n  & p {\n    width: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: bold;\n  }\n\n  & p:last-child {\n    width: 150px;\n    /* border: 1px solid ; */\n    border-radius: 8px;\n  }\n`;\n\nexport const ListTraining = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border: 1px solid ;\n  padding: 8px;\n  transition: background-color 0.3s;\n\n  & p {\n    width: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  & p:last-child {\n    width: 150px;\n    /* border: 1px solid ; */\n    border-radius: 8px;\n  }\n`;\n","import {\n  formatDate\n} from '../Filtered/Filtered';\nimport {\n  ContainerTrainings,\n  WrapperTraining,\n  ListTraining\n} from './VisibleTrainings.styled';\n\nconst VisibleTrainings = ({ trainings }) => {\n  // console.log(trainings)  \n  return (\n    <ContainerTrainings>\n      <WrapperTraining>\n        <p>Дата</p>\n        <p>Час</p>\n        <p>Вид тренування</p>\n      </WrapperTraining>\n      <div>\n      {trainings.map(item => {\n        return (\n            <ListTraining key={item._id}>\n              <p>{formatDate(item.date)}</p>\n              <p>{item.time}</p>\n              <p>{item.kind_training}</p>\n            </ListTraining>\n      )\n      })}\n      </div>\n    </ContainerTrainings>\n  )\n};\n\nexport default VisibleTrainings;","import styled from \"styled-components\";\n\nexport const Administation = styled.span`\n  font-weight: 700;\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n\n`;","import styled from \"styled-components\";\n\nexport const WrapperBuyTicket = styled.div`\n\tposition: relative;\n  margin-top: 50px;\n`;\n\nexport const BuyTicketBTN = styled.button`\n  box-shadow: 3px 4px 0px 0px #899599;\n\tbackground:linear-gradient(to bottom, #ededed 5%, #bab1ba 100%);\n\tbackground-color:#ededed;\n\tborder-radius:15px;\n\tborder:1px solid #d6bcd6;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#606567;\n\tfont-family:Arial;\n\tfont-size:17px;\n  font-weight: bold;\n\tpadding:7px 25px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #e1e2ed;\n  :hover {\n    background:linear-gradient(to bottom, #bab1ba 5%, #ededed 100%);\n    background-color:#bab1ba;\n  }\n  :active {\n    position:relative;\n    top:1px;\n  }\n`;","import {\n  WrapperBuyTicket,\n  BuyTicketBTN,\n} from './BuySubscription.styled';\nimport { useState } from 'react';\nimport { ModalViewBuySubscription } from '../../../ModalView/ModalView';\n// import { clientAPI } from '../../../../service/axios.config';\n// OnGetAllSeasonTickets\n\nconst BuySubscription = () => {\n  const [showModal, setShowModal] = useState(false);\n  // const [dataSeasonTickets, setDataSeasonTickets] = useState('');\n\n  // const getDataSeasonTickets = async () => {\n  //   const result = await clientAPI.OnGetAllSeasonTickets();\n  //   return result;\n  // }\n\n  // useEffect(() => {\n  //   getDataSeasonTickets().then((result) => setDataSeasonTickets(result));\n  // }, []);\n  \n  // console.log(dataSeasonTickets)\n\n  const handleShowModal = (e) => {\n    e.preventDefault();\n    setShowModal(!showModal);\n  }\n\n  return (\n    <WrapperBuyTicket>\n      <BuyTicketBTN onClick={handleShowModal}>Придбати абонемент</BuyTicketBTN>\n      {showModal ? <ModalViewBuySubscription handleShowModal={handleShowModal} /> : null}\n    </WrapperBuyTicket>\n  )\n};\n\nexport default BuySubscription;","import { useSelector } from 'react-redux';\nimport { BsSuitHeartFill } from 'react-icons/bs';\nimport { useState } from 'react';\nimport { VisitTrainingsGraphic } from '../Graphics/TrainingsGraphic';\nimport VisibleTrainings from '../VisibleTrainings/VisibleTrainings';\nimport {\n  Title,\n} from './Subscription.styled';\nimport BuySubscription from './BuySubscription/BuySubscription';\n\nconst Subscription = () => {\n  const user = useSelector((state) => state.user);\n  const [openCheckTrainings, setOpenCheckTrainings] = useState(false);\n  const [isViewTrainings, setIsViewTrainings] = useState();\n  const nameSeasonTicket = user.seasonTickets.name;\n  const buySeasonTicket = user.seasonTickets.dateOfBuying;\n  // const limitSeasonTicket = user.seasonTickets[user.seasonTickets.length - 1].limitOfTrainings;\n  const remainderSeasonTicket = user.seasonTickets.remainderOfTrainings;\n  \n  // const useTicketsOnTrainings = user.seasonTickets.useTicketsOnTrainings;\n  // console.log(nameSeasonTicket)\n\n  // Перевірка чи buySeasonTicket не є undefined\n  // if (buySeasonTicket.length === 0) {\n  //   return (\n  //     <div>\n  //       <Title>Абонемент</Title>\n  //       <p>Відсутня інформація, зверніться до <Administation>адміністрації</Administation>!</p>\n  //     </div>\n  //   );\n  // }\n\n  const endSubscriptionDate = (inputDate) => {\n    if (inputDate.length === 0) { \n      return null;\n    }\n    const dateArray = inputDate.split('T');\n    const datePart = dateArray[0];\n    const timePart = dateArray[1].split('.')[0]; // Відкидаємо мілісекунди тут\n\n    const dateParts = datePart.split('-');\n    const year = parseInt(dateParts[0], 10);\n    const month = parseInt(dateParts[1], 10) - 1; // Місяці в JavaScript починаються з 0\n    const day = parseInt(dateParts[2], 10);\n\n    const timeParts = timePart.split(':');\n    const hour = parseInt(timeParts[0], 10);\n    const minute = parseInt(timeParts[1], 10);\n    const second = parseInt(timeParts[2], 10);\n\n    const currentDate = new Date(year, month, day, hour, minute, second);\n    currentDate.setMonth(currentDate.getMonth() + 1);\n\n    const newDay = currentDate.getDate();\n    const newMonth = currentDate.getMonth() + 1;\n    const newYear = currentDate.getFullYear();\n\n    const result = `${newDay < 10 ? '0' : ''}${newDay}.${newMonth < 10 ? '0' : ''}${newMonth}.${newYear.toString().slice(-2)}`;\n    return result;\n  }\n  \n  const calculateDateDifference = (endDate) => {\n    if (endDate === null) {\n      return null;\n    }\n    const [endDateDay, endMonth, endYear] = endDate.split('.');\n    const endDateObj = new Date(`20${endYear}`, endMonth - 1, endDateDay);\n    const currentDateObj = new Date();\n    const timeDifference = endDateObj - currentDateObj;\n    const daysDifference = Math.ceil(timeDifference / (1000 * 60 * 60 * 24));\n    return daysDifference;\n  }\n\n  const handleOpenCheck = (e) => {\n    // e.preventDefault();\n    setOpenCheckTrainings(true);\n    setIsViewTrainings(e.data.info)\n  };\n\n  const calculateDateDifferencePercent = (endDate) => {\n    if (endDate === null) return;\n    const dayOfMonth = 31;\n    const [endDay, endMonth, endYear] = endDate.split('.');\n    const endDateObj = new Date(`20${endYear}`, endMonth - 1, endDay);\n    const currentDateObj = new Date();\n    const timeDifference = endDateObj - currentDateObj;\n    const daysDifference = Math.ceil(timeDifference / (1000 * 60 * 60 * 24));\n    const percentageDifference = parseFloat(50 * (daysDifference / dayOfMonth * 100) / 100).toFixed(2);\n    return percentageDifference;\n  }\n\n  const allVisitTrainingsSubscription = user.seasonTickets.allUnique\n    ? Object.entries(user.seasonTickets.allUnique) : [];\n\n  const dataVisitTrainingsSubscriptionGraphic = allVisitTrainingsSubscription.length > 0\n    ? allVisitTrainingsSubscription.map(([id, value]) => ({\n          id,\n          label: id,\n          value: value.length,\n          info: value\n      }))\n    : [];\n\n  const endDate = endSubscriptionDate(buySeasonTicket);\n  // console.log(endDate);\n  const difference = calculateDateDifference(endDate);\n  // console.log(difference)\n  const differencePercent = calculateDateDifferencePercent(endDate);\n\n  const NonInformation = () => {\n    return (\n      <>\n        <>\n          <p>Відсутня інформація</p>\n        </>\n        <>\n          <BuySubscription/>\n        </>\n      </>\n    )\n  }\n  // console.log(dataVisitTrainingsSubscriptionGraphic)\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n      <Title>Поточний абонемент</Title>\n      \n      {nameSeasonTicket === 'Відсутні дані'\n        ?\n        <NonInformation />\n        :\n        <>\n        {nameSeasonTicket === \"Безлімітний\"\n          ?\n          <p>\"{nameSeasonTicket}\"</p>\n          :\n          <p>\"{nameSeasonTicket}\"\n            <span>&nbsp;({remainderSeasonTicket})</span>\n          </p>}\n        <div style={{ width: '50px', height: '50px', position: 'relative' }}>\n          <BsSuitHeartFill size={50} fill='#817c7c' />\n          <div style={{position: 'absolute', top: '50%', right: '50%', transform: 'translate(50%, -50%)', marginTop: '2px'}}>\n            <BsSuitHeartFill size={differencePercent} fill='#e62239'  />\n            <div style={{position: 'absolute', top: '50%', right: '50%', transform: 'translate(50%, -50%)'}}>\n              <Title>{difference}</Title>\n            </div>\n          </div>\n        </div>\n        <div>\n          <p>На які тренування використано</p>\n          <div style={{width: '350px', height: '230px'}}>\n            <VisitTrainingsGraphic\n              data={dataVisitTrainingsSubscriptionGraphic}\n              info={handleOpenCheck}\n            />\n          </div>\n        </div>\n        {openCheckTrainings ? <VisibleTrainings trainings={isViewTrainings} /> : ''}\n    </>}\n    </div>\n  )\n};\n\nexport default Subscription;\n\n","import styled from \"styled-components\";\n\nexport const WrapperInfoSlider = styled.div`\n  width: 320px;\n  height: 230px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;","import { useState } from 'react';\nimport { VisitTrainingsGraphic } from '../Graphics/TrainingsGraphic';\nimport VisibleTrainings from '../VisibleTrainings/VisibleTrainings';\nimport { useSelector } from 'react-redux';\nimport {\n  WrapperInfoSlider,\n  Title\n} from './Visiting.styled';\n\nconst Visiting = () => {\n  const [openCheckTrainings, setOpenCheckTrainings] = useState(false)\n  const [isViewTrainings, setIsViewTrainings] = useState();\n  const user = useSelector((state) => state.user);\n\n  // console.log(isViewTrainings);\n\n  const dataVisitTrainingsGraphic = [\n    {\n      \"id\": \"відмінено\",\n      \"label\": \"відмінено\",\n      \"value\": user.trainings.nonVisit.length,\n      \"info\": user.trainings.nonVisit,\n    },\n    {\n      \"id\": \"відвідано\",\n      \"label\": \"відвідано\",\n      \"value\": user.trainings.visit.length,\n      \"info\": user.trainings.visit\n    },\n  ];\n  \n  const handleOpenCheck = (e) => {\n    // e.preventDefault();\n    setOpenCheckTrainings(true);\n    setIsViewTrainings(e.data.info)\n  };\n\n  const NonVisitTrainings = () => {\n    return (\n      <>\n        <p>Ви ще не були на тренуваннях</p>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Title>Відвідування</Title>\n      {user.trainings.visit?.length === 0 || user.trainings.visit.length === undefined ? <NonVisitTrainings /> :\n        <WrapperInfoSlider>\n          <VisitTrainingsGraphic data={dataVisitTrainingsGraphic} info={handleOpenCheck} />\n          {openCheckTrainings ? <VisibleTrainings trainings={isViewTrainings} /> : ''}\n        </WrapperInfoSlider>\n      }\n    </>\n  )\n};\n\nexport default Visiting;","import styled from \"styled-components\";\n\nexport const WrapperInfoSlider = styled.div`\n  width: 320px;\n  height: 230px;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;","import { useState } from 'react';\nimport { VisitTrainingsGraphic } from '../Graphics/TrainingsGraphic';\nimport VisibleTrainings from '../VisibleTrainings/VisibleTrainings';\nimport { useSelector } from 'react-redux';\nimport {\n  WrapperInfoSlider,\n  Title\n} from './Trainings.styled';\n\nconst Trainings = () => {\n  const [openCheckTrainings, setOpenCheckTrainings] = useState(false)\n  const [isViewTrainings, setIsViewTrainings] = useState();\n  const user = useSelector((state) => state.user);\n\n  // console.log(isViewTrainings);\n\n  const allUniqueVisitTrainings = user.trainings && user.trainings.allUnique\n    ? Object.entries(user.trainings.allUnique)\n    : [];\n  const dataUniqueVisitTrainingsGraphic = allUniqueVisitTrainings.map(([id, value]) => ({\n    id,\n    label: id,\n    value: value.length,\n    info: value\n  }));\n  \n  const handleOpenCheck = (e) => {\n    // e.preventDefault();\n    setOpenCheckTrainings(true);\n    setIsViewTrainings(e.data.info)\n  };\n\n  return (\n    <>\n      <Title>Тренування</Title>\n      {user.trainings.visit.length === 0 || user.trainings.visit.length === undefined\n        ?\n        <p>У Вас ще не було тренувань, будь ласка, запишіться на тренування</p> :\n      <WrapperInfoSlider>\n        <VisitTrainingsGraphic data={dataUniqueVisitTrainingsGraphic} info={handleOpenCheck} />\n        {openCheckTrainings ? <VisibleTrainings trainings={isViewTrainings} /> : ''}\n      </WrapperInfoSlider>}\n    </>\n  )\n};\n\nexport default Trainings;","import styled from \"styled-components\";\n\nexport const WrapperInfoSlider = styled.div`\n  width: 320px;\n  height: 230px;\n`;\n\nexport const WrapperInformation = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nexport const WrapperRecords = styled.div`\n  border: 1px solid;\n  border-radius: 12px;\n  margin: 5px;\n  background-color: #d7d0d0;\n  box-shadow: 0px 0px 12px 0px rgba(128, 0, 0, 1);\n  padding: 4px;\n`;\n\nexport const NameTraining = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n`;\n\nexport const WrapperUsersName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid;\n  border-radius: 12px;\n  margin: 3px;\n  padding: 2px;\n`;","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { clientAPI } from '../../../service/axios.users';\nimport { FcCheckmark } from \"react-icons/fc\";\nimport { IoIosClose } from \"react-icons/io\";\nimport {\n  WrapperInfoSlider,\n  Title,\n  WrapperInformation,\n  WrapperRecords,\n  NameTraining,\n  WrapperUsersName\n} from './TrainingsSchedule.styled';\n\n\nconst TrainingsSchedule = () => {\n  const user = useSelector((state) => state.user);\n  const labelAuth = useSelector((state) => state.user.labelAuth);\n  const [dataTrainings, setDataTrainings] = useState('');\n  const [dataTrainingsToday, setDataTrainingsToday] = useState([]);\n  const [dataTrainingsTomorrow, setDataTrainingsTomorrow] = useState([]);\n  const [visitTrainingMap, setVisitTrainingMap] = useState({});\n  const [cancelVisitTrainingMap, setCancelVisitTrainingMap] = useState({});\n  const linkInstagram = 'https://www.instagram.com/';\n\n  const getTrainingsCoach = async (labelAuth) => {\n    return await clientAPI.OnGetCoachTrainings(labelAuth)\n  };\n  \n  useEffect(() => {\n    getTrainingsCoach(labelAuth).then(result => setDataTrainings(result));\n  }, [labelAuth]);\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\n  const day = ('0' + date.getDate()).slice(-2);\n  const formattedDate = `${year}-${month}-${day}`;\n\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const tomorrowYear = tomorrow.getFullYear();\n  const tomorrowMonth = ('0' + (tomorrow.getMonth() + 1)).slice(-2);\n  const tomorrowDay = ('0' + tomorrow.getDate()).slice(-2);\n  const tomorrowFormattedDate = `${tomorrowYear}-${tomorrowMonth}-${tomorrowDay}`;\n\n  useEffect(() => {\n    if (dataTrainings) {\n      const allTrainings = dataTrainings.reduce((acc, item) => {\n        return [...acc, ...item.trainings];\n      }, []);\n\n      const filteredTrainingsToday = allTrainings.filter(training => training.date.slice(0, 10) === formattedDate);\n      const filteredTrainingsTomorrow = allTrainings.filter(training => training.date.slice(0, 10) === tomorrowFormattedDate);\n\n      const uniqueTimesToday = [...new Set(filteredTrainingsToday.map(training => training.time))];\n      const uniqueTimesTomorrow = [...new Set(filteredTrainingsTomorrow.map(training => training.time))];\n\n      const uniqueKindTrainingsToday = [...new Set(filteredTrainingsToday.map(training => training.kind_training))];\n      const uniqueKindTrainingsTomorrow = [...new Set(filteredTrainingsTomorrow.map(training => training.kind_training))];\n\n      const newDataToday = uniqueTimesToday.flatMap(time => {\n        return uniqueKindTrainingsToday.map(kind_training => {\n          const usersInformation = {};\n          filteredTrainingsToday.forEach(training => {\n            if (training.time === time && training.kind_training === kind_training) {\n              const foundDataTraining = dataTrainings.find(items => items.trainings.find(item => item._id === training._id));\n              if (foundDataTraining) {\n                usersInformation[training._id] = {\n                  name: foundDataTraining.name,\n                  surname: foundDataTraining.surname,\n                  instagram: foundDataTraining.instagram,\n                  trainingID: training._id,\n                  time: time,\n                  kind_training: kind_training,\n                  seasonTicketID: training.seasonTicketsID,\n                  visitTraining: training.visitTraining,\n                  canceledTraining: training.canceledTraining,\n                };\n              }\n            }\n          });\n          return {\n            usersInformation\n          };\n        });\n      });\n\n      const newDataTomorrow = uniqueTimesTomorrow.flatMap(time => {\n        return uniqueKindTrainingsTomorrow.map(kind_training => {\n          const usersInformation = {};\n          filteredTrainingsTomorrow.forEach(training => {\n            if (training.time === time && training.kind_training === kind_training) {\n              const foundDataTraining = dataTrainings.find(items => items.trainings.find(item => item._id === training._id));\n              if (foundDataTraining) {\n                usersInformation[training._id] = {\n                  name: foundDataTraining.name,\n                  surname: foundDataTraining.surname,\n                  instagram: foundDataTraining.instagram,\n                  trainingID: training._id,\n                  time: time,\n                  kind_training: kind_training,\n                  seasonTicketID: training.seasonTicketsID,\n                  visitTraining: training.visitTraining,\n                  canceledTraining: training.canceledTraining,\n                };\n              }\n            }\n          });\n          return {\n            usersInformation\n          };\n        });\n      });\n\n      setDataTrainingsToday(newDataToday);\n      setDataTrainingsTomorrow(newDataTomorrow);\n    }\n  }, [dataTrainings, formattedDate, tomorrowFormattedDate]);\n\n  // console.log(\"dataTrainingsToday: \", dataTrainingsToday);\n\n  const handleCheckVisit = async (e, trainingID, seasonTicketID, visit) => {\n    e.preventDefault();\n    const dataVisitTraining = {\n      trainingID: trainingID,\n      visit: visit,\n      seasonTicketID: seasonTicketID,\n    }\n    const sendVisitRequest = await clientAPI.OnSendVisitTraining(dataVisitTraining);\n    if (sendVisitRequest === \"Підтверджено тренування\") {\n      setCancelVisitTrainingMap(prevState => ({ ...prevState, [trainingID]: false }));\n      setVisitTrainingMap(prevState => ({ ...prevState, [trainingID]: true }));\n    }\n    if (sendVisitRequest === \"Скасовано тренування\") {\n      setCancelVisitTrainingMap(prevState => ({ ...prevState, [trainingID]: true }));\n      setVisitTrainingMap(prevState => ({ ...prevState, [trainingID]: false }));\n    }\n    return sendVisitRequest;\n  };\n\n  // console.log(\"visitTrainingMap: \", visitTrainingMap);\n\n  // console.log(\"cancelVisitTrainingMap: \", cancelVisitTrainingMap);\n\n  return (\n    <WrapperInfoSlider>\n      <Title>Записи тренера {user.name} {user.surname === '-' ? '' : user.surname}</Title>\n      <WrapperInformation>\n      <div>\n        <p>На сьогодні</p>\n        {Object.values(dataTrainingsToday).map((dayTrainings, outerIndex) => (\n          <WrapperRecords key={outerIndex}>\n            {Object.values(dayTrainings.usersInformation).map((userData, index) => (\n              <div key={userData.trainingID}>\n                {index === 0 && (\n                  <p><NameTraining>{userData.kind_training} <br/>({userData.time})</NameTraining> </p>\n                )}\n                <WrapperUsersName\n                  id={userData.trainingID}\n                  className={`\n                    ${userData.visitTraining || visitTrainingMap[userData.trainingID] ? 'visited' : ''} \n                    ${userData.canceledTraining || cancelVisitTrainingMap[userData.trainingID] ? 'canceled' : ''}`}\n                >\n                  <FcCheckmark\n                    onClick={(e) => handleCheckVisit(e, userData.trainingID, userData.seasonTicketID, 'true')} />\n                  <a\n                    href={linkInstagram + userData.instagram}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    {userData.name} {userData.surname === '-' ? '' : userData.surname}</a>\n                  <IoIosClose\n                    onClick={(e) => handleCheckVisit(e, userData.trainingID, userData.seasonTicketID, 'false')}\n                    color='red'/>\n                </WrapperUsersName>\n              </div>\n            ))}\n          </WrapperRecords>\n        ))}\n      </div>\n      <div>\n        <p>На завтра</p>\n        {Object.values(dataTrainingsTomorrow).map((dayTrainings, outerIndex) => (\n          <WrapperRecords key={outerIndex}>\n            {Object.values(dayTrainings.usersInformation).map((userData, innerIndex) => (\n              <div key={innerIndex}>\n                  {innerIndex === 0 && (\n                    <p><NameTraining>{userData.kind_training} <br/>({userData.time})</NameTraining> </p>\n                  )}\n                  <p>{userData.name}</p>\n              </div>\n            ))}\n          </WrapperRecords>\n        ))}\n      </div>\n      </WrapperInformation>\n    </WrapperInfoSlider>\n  )\n};\n\nexport default TrainingsSchedule;\n\n","import styled from \"styled-components\";\n\nexport const WrapperCoachInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid;\n  margin: 5px;\n  border-radius: 12px;\n  padding: 3px;\n  & a{\n    margin: 2px;\n  }\n  & p{\n    margin: 2px;\n  }\n  /* margin: 15px; */\n`;\n\n\nexport const InputStyle = styled.input`\n  background-color: inherit;\n  /* border: none; */\n  border-radius: 5px;\n  box-shadow: inset 0px 0px 22px -10px rgba(128, 0, 0, 1);\n  /* width: 100px; */\n`;","import { useEffect, useState } from \"react\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  WrapperCoachInfo,\n} from './ScheduleAdmin.styled';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { clientAPI } from \"../../../service/axios.users\";\nimport { ModalViewCoachSalary } from '../../ModalView/ModalView';\n\nconst ScheduleAdmin = () => {\n\n  const [dataCoach, setDataCoach] = useState({});\n  const [dateRanges, setDateRanges] = useState({});\n  const [selectedCoach, setSelectedCoach] = useState('');\n  const [open, setOpen] = useState(false);\n  const [dataCoachTrainings, setDataCoachTrainings] = useState(false);\n\n  const getDataCoach = async () => {\n    return await clientAPI.OnGetCoaches();\n  }\n\n  useEffect(() => {\n    getDataCoach().then(result => setDataCoach(result));\n  }, []);\n\n  const handleStartDateChange = (date, labelAuth) => {\n    setDateRanges(prevState => ({\n      ...prevState,\n      [labelAuth]: { ...prevState[labelAuth], startDate: date }\n    }));\n  };\n\n  const handleEndDateChange = (date, labelAuth) => {\n    setDateRanges(prevState => ({\n      ...prevState,\n      [labelAuth]: { ...prevState[labelAuth], endDate: date }\n    }));\n  };\n\n  const handleViewTrainingsPay = async (coachInfo) => {\n    setSelectedCoach(coachInfo);\n    const selectedDates = dateRanges[coachInfo];\n    const sendData = { date: selectedDates, coach: { labelAuth: coachInfo } };\n    const getCoachesSalary = await clientAPI.OnGetCoachSalary(sendData);\n    if (getCoachesSalary) {\n      setOpen(true);\n      setDataCoachTrainings(getCoachesSalary);\n    }\n    return getCoachesSalary;\n  }\n\n  const handleCloseModal = () => {\n    return setOpen(false);\n  }\n  // console.log(dataCoach)\n  return (\n    <div>\n      <h3>Тренери</h3>\n      {dataCoach.length > 0 && dataCoach.map((item, index) => (\n        <WrapperCoachInfo key={index}>\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n            {item.instagram === '-' ?\n              <p>{item.name} {item.surname === '-' ? '' : item.surname}</p> :\n              <a href={`https://www.instagram.com/${item.instagram}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                {item.name} {item.surname === '-' ? '' : item.surname}\n              </a>}\n            <a href={`tel:${item.tel}`}>\n              <BsFillTelephoneFill style={{ fill: '#544949' }} size={11} />\n            </a>\n          </div>\n          <p>Унікальний ідентифікатор: {item.labelAuth}</p>\n          <p>Доступ: {item.type}</p>\n          <p>Здійснити розрахунок тренера за період:</p>\n          <DatePicker\n            selected={dateRanges[item.labelAuth]?.startDate}\n            onChange={date => handleStartDateChange(date, item.labelAuth)}\n            selectsStart\n            startDate={dateRanges[item.labelAuth]?.startDate}\n            endDate={dateRanges[item.labelAuth]?.endDate}\n            placeholderText=\"Початок\"\n          />\n          <DatePicker\n            selected={dateRanges[item.labelAuth]?.endDate}\n            onChange={date => handleEndDateChange(date, item.labelAuth)}\n            selectsEnd\n            startDate={dateRanges[item.labelAuth]?.startDate}\n            endDate={dateRanges[item.labelAuth]?.endDate}\n            minDate={dateRanges[item.labelAuth]?.startDate}\n            placeholderText=\"Кінець\"\n          />\n          <button onClick={() => handleViewTrainingsPay(item.labelAuth)}>Вибрати</button>\n        </WrapperCoachInfo>\n      ))}\n      {open ?\n        <>\n          <ModalViewCoachSalary\n            dateRanges={dateRanges}\n            selectedCoach={selectedCoach}\n            dataCoachTrainings={dataCoachTrainings}\n            handleCloseModal={handleCloseModal}\n          />\n        </>\n        :\n        ''}\n    </div>\n  );\n};\n\nexport default ScheduleAdmin;\n","import styled from \"styled-components\";\n\nexport const SelectTrainings = styled.select`\n  background-color: inherit;\n  border-radius: 12px;\n  text-align: center;\n  width: 100%;\n  height: 35px;\n  border: 2px solid #4a4d53;\n  margin-top: 10px;\n`;\n\nexport const ChangeButton = styled.button`\n\tbox-shadow: 3px 4px 0px 0px #899599;\n\tbackground:linear-gradient(to bottom, #d7ddd5 5%, #8d9a8d 100%);\n  /* margin-right: 20px; */\n\tbackground-color:#ededed;\n\tborder-radius:15px;\n\tborder:1px solid #d6bcd6;\n\tdisplay:inline-block;\n\tcursor:pointer;\n\tcolor:#000000;\n\tfont-family:Arial;\n\tfont-size:14px;\n  padding: 4px 10px;\n  margin: 5px;\n\ttext-decoration:none;\n\ttext-shadow:0px 1px 0px #e1e2ed;\n\n  :hover {\n    background:linear-gradient(to bottom, #bab1ba 5%, #ededed 100%);\n    background-color:#bab1ba;\n  }\n  :active {\n    position:relative;\n    top:1px;\n}`;\n\nexport const WrapperListSchedule = styled.div`\n  display: flex;\n`","import React, { useEffect, useState } from \"react\";\nimport { scheduleAPI } from \"../../../service/axios.schedule\";\nimport { kindTrainingsAPI } from \"../../../service/axios.kindTrainings\";\nimport { clientAPI } from \"../../../service/axios.users\";\nimport {\n  ModalViewAddSchedule,\n  ModalViewAddKindTraining\n} from '../../ModalView/ModalView';\nimport {\n  SelectTrainings,\n  ChangeButton,\n  WrapperListSchedule,\n} from './TrainingView.styled';\n\nconst TrainingView = () => {\n  const days = {\n    day1: 'monday',\n    day2: 'tuesday',\n    day3: 'wednesday',\n    day4: 'thursday',\n    day5: 'friday',\n    day6: 'saturday',\n    day7: 'sunday',\n  };\n\n  const [scheduleData, setScheduleData] = useState([]);\n  const [scheduleByDay, setScheduleByDay] = useState({\n    monday: [],\n    tuesday: [],\n    wednesday: [],\n    thursday: [],\n    friday: [],\n    saturday: [],\n    sunday: [],\n  });\n\n  const [kindTrainingData, setKindTrainingData] = useState({});\n  const [isOpenAddKindTraining, setIsOpenAddKindTraining] = useState(false);\n  const [isOpenChangeSchedule, setIsOpenChangeSchedule] = useState(false);\n  const [dataCoach, setDataCoach] = useState({});\n  const [selectDayData, setSelectDayData] = useState('');\n  const [selectDay, setSelectDay] = useState('');\n  \n\n  const translateDay = (day) => {\n    switch (day.toLowerCase()) {\n      case 'monday':\n        return 'понеділок';\n      case 'tuesday':\n        return 'вівторок';\n      case 'wednesday':\n        return 'середа';\n      case 'thursday':\n        return 'четвер';\n      case 'friday':\n        return 'п’ятниця';\n      case 'saturday':\n        return 'субота';\n      case 'sunday':\n        return 'неділя';\n      default:\n        return day;\n    }\n  };\n\n  const time = {};\n  for (let i = 8; i <= 20; i++) {\n    const hour = (i < 10 ? '0' : '') + i;\n    time[i] = hour + ':00';\n  }\n\n  const getDataSchedule = async () => {\n    return await scheduleAPI.OnGetAllSchedule();\n  };\n\n  const getDataCoach = async () => {\n    return await clientAPI.OnGetCoaches();\n  };\n\n  const getDataKindTrainings = async () => {\n    return await kindTrainingsAPI.OnGetKindTrainings();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getDataSchedule();\n      setScheduleData(Array.isArray(result) ? result : []);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    getDataCoach().then(result => setDataCoach(result));\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getDataKindTrainings();\n      setKindTrainingData(result);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const filteredSchedule = {};\n    for (const dayKey in days) {\n      const day = days[dayKey];\n      filteredSchedule[day] = scheduleData\n        .filter(item => item.day === day)\n        .sort((a, b) => {\n          const timeA = parseInt(a.time.split(\":\")[0]); // розбиваємо час на години та хвилини\n          const timeB = parseInt(b.time.split(\":\")[0]);\n          return timeA - timeB; // відсортовуємо за годинами\n        });\n    }\n    setScheduleByDay(filteredSchedule);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scheduleData]);\n\n  const openChangeSchedule = () => {\n    // e.preventDefault();\n    setIsOpenChangeSchedule(!isOpenChangeSchedule);\n  };\n\n  const openAddKindTraining = () => {\n    // e.preventDefault();\n    setIsOpenAddKindTraining(!isOpenAddKindTraining);\n  };\n\n  useEffect(() => {\n    setSelectDayData(scheduleByDay[selectDay]);\n  }, [selectDay, scheduleByDay])\n\n  console.log(selectDayData);\n\n  return (\n    <>\n      <h3>Розклад</h3>\n      <div>\n        <ChangeButton onClick={() => openChangeSchedule()}>Змінити рокзлад</ChangeButton>\n        <ChangeButton onClick={() => openAddKindTraining()}>Додати новий вид тренування</ChangeButton>\n      </div>\n      <SelectTrainings\n        value={selectDay}\n        onChange={(e) => setSelectDay(e.target.value)}\n      >\n        <option style={{ backgroundColor: '#d6aaaa' }} value=\"-\">Обери день</option>\n        {Object.values(days).map((item, index) => (\n          <option\n            key={index}\n            value={item}\n            style={{ backgroundColor: '#d6aaaa', overflow: 'auto' }}\n          >\n            {translateDay(item)}\n          </option>\n        ))}\n      </SelectTrainings>\n      {selectDayData ? \n        selectDayData.map((item, index) => (\n          <WrapperListSchedule key={index}>\n            <p>{item.time}</p>\n            <p>{item.kind_training}</p>\n            <p>{item.coach === '' ? '' :item.coach}</p>\n          </WrapperListSchedule>\n      )) : ''}\n      {isOpenChangeSchedule ?\n        <ModalViewAddSchedule\n          openChangeSchedule={openChangeSchedule}\n          dataCoach={dataCoach}\n          time={time}\n          kindTrainingData={kindTrainingData}\n        /> : ''}\n      {isOpenAddKindTraining ?\n        <ModalViewAddKindTraining\n          openAddKindTraining={openAddKindTraining}\n        /> : ''}\n    </>\n  );\n};\n\nexport default TrainingView;\n","import AwesomeSlider from 'react-awesome-slider';\nimport {\n  WrapperInfoSlider,\n} from './Sliders.styled';\nimport LoveTrainings from '../LoveTrainings/LoveTrainings';\nimport Schedule from '../Schedule/Schedule';\nimport Subscription from '../Subscription/Subscription';\nimport Visiting from '../Visiting/Visiting';\nimport Trainings from '../Trainings/Trainings';\nimport TrainingsSchedule from '../../CoachInformation/TrainingsSchedule/TrainingsSchedule';\nimport { useSelector } from 'react-redux';\nimport ScheduleAdmin from '../../CoachInformation/ScheduleAdmin/ScheduleAdmin';\nimport TrainingView from '../../CoachInformation/TrainingView/TrainingView';\nimport { FaPhoenixFramework } from \"react-icons/fa6\";\n\nconst Sliders = () => {\n  const user = useSelector((state) => state.user);\n  const access = user.access;\n  const Prepare = () => {\n    return (\n      <div>\n      <h3>В процесі розробки</h3>\n        <div>\n          <FaPhoenixFramework size={195} color='#6f1a60' />\n        </div>\n      </div>\n    )\n  }\n  \n  return (\n    <AwesomeSlider\n      animation=\"cubeAnimation\"\n      style={{height: '550px'}}\n    >\n      \n        {/* {access === 'coach' || access === 'admin'\n        ? \n          <div style={{ backgroundColor: 'inherit', display: 'flex', alignItems: 'start' }}>\n          <TrainingsSchedule /></div>\n        :\n        <div style={{ backgroundColor: 'inherit', display: 'flex', alignItems: 'start' }}>\n          <Subscription /></div>\n        }\n        {access === 'admin' ? \n        <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n        <ScheduleAdmin/></div> : \n        access === 'coach' ? \n          '' :\n          <div style={{ backgroundColor: 'inherit', display: 'flex', alignItems: 'start' }}>\n            <LoveTrainings /></div>}\n      \n        \n      {access === 'admin' ? \n      <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n        <TrainingView/> </div>\n        : access === 'coach' ? '' :\n          <div style={{ backgroundColor: 'inherit', display: 'flex', alignItems: 'start' }}>\n            <WrapperInfoSlider>\n              <Schedule />\n            </WrapperInfoSlider>\n          </div>\n      }\n      \n        \n      {access === 'coach' || access === 'admin' ? '' : \n      <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n        <Visiting/></div>}\n      {access === 'coach' || access === 'admin' ?\n        '' :\n        <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}><Trainings /></div>} */}\n      <div style={{ backgroundColor: 'inherit', display: 'flex', alignItems: 'start' }}>\n       {access === 'coach' || access === 'admin' ? <TrainingsSchedule/> : <Subscription/>}\n     </div>\n     <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n       {access === 'admin' ? <ScheduleAdmin/> : access === 'coach' ? <Prepare/> : <LoveTrainings/>}\n     </div>\n     <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n       {access === 'admin' ? <TrainingView/> : access === 'coach' ? <Prepare/> : <WrapperInfoSlider><Schedule/></WrapperInfoSlider>}\n     </div>\n      <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n       {access === 'coach' || access === 'admin' ? <Prepare/> : <Visiting/>}\n     </div>\n     <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n       {access === 'coach' || access === 'admin' ? <Prepare/> : <Trainings/>}\n     </div>\n        \n      \n    </AwesomeSlider>\n  )\n};\n\nexport default Sliders;\n\n\n\n //       <div style={{ backgroundColor: 'inherit', display: 'flex', alignItems: 'start' }}>\n //       {access === 'coach' || access === 'admin' ? <TrainingsSchedule/> : <Subscription/>}\n   //   </div>\n     // <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n//        {access === 'admin' ? <ScheduleAdmin/> : access === 'coach' ? '' : <LoveTrainings/>}\n  //    </div>\n   //   <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n    //    {access === 'admin' ? <TrainingView/> : access === 'coach' ? '' : <WrapperInfoSlider><Schedule/></WrapperInfoSlider>}\n     // </div>\n      //<div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n    //    {access === 'coach' || access === 'admin' ? '' : <Visiting/>}\n    //  </div>\n     // <div style={{backgroundColor: 'inherit', display: 'flex', alignItems: 'start'}}>\n    //    {access === 'coach' || access === 'admin' ? '' : <Trainings/>}\n     // </div>\n\n\n\n// import { useSelector } from 'react-redux';\n// import { Swiper, SwiperSlide } from 'swiper/react';\n// import 'swiper/css';\n// import 'swiper/css/pagination';\n// import { Navigation, Pagination, Scrollbar, A11y } from 'swiper/modules';\n// import {\n//   VisitTrainingsGraphic,\n// } from '../Graphics/TrainingsGraphic';\n// import {\n//   WrapperInfoSlider,\n// } from './Sliders.styled';\n// import LoveTrainings from '../LoveTrainings/LoveTrainings';\n// import Schedule from '../Schedule/Schedule';\n// import 'swiper/swiper-bundle.css';\n\n// const Sliders = ({ dataVisit, infoVisit, dataUnique, infoUnique }) => {\n//   const user = useSelector((state) => state.user);\n//   return (\n//     <Swiper\n//       modules={[Navigation, Pagination, Scrollbar, A11y]}\n//       spaceBetween={50}\n//       slidesPerView={1}\n//       // onSlideChange={() => console.log('slide change')}\n//       // onSwiper={(swiper) => console.log(swiper)}\n//       pagination={{\n//         el: '.swiper-pagination',\n//         type: 'bullets',\n//         clickable: true}}\n//     >\n//       <SwiperSlide >\n//         <p>Записатися на:</p>\n//           <Schedule/>\n//       </SwiperSlide>\n//       {/* <SwiperSlide  >\n//         <p>Запис на улюблене тренування {user.trainings.popular}?</p>\n//         <LoveTrainings/>\n//       </SwiperSlide>\n//       <SwiperSlide >\n//         <p>Відвідування</p>\n//         <WrapperInfoSlider>\n//           <VisitTrainingsGraphic data={dataVisit} info={infoVisit} />\n//         </WrapperInfoSlider>\n//       </SwiperSlide>\n//       <SwiperSlide >\n//         <p>Тренування</p>\n//         <WrapperInfoSlider>\n//           <VisitTrainingsGraphic data={dataUnique} info={infoUnique} />\n//         </WrapperInfoSlider>\n//       </SwiperSlide> */}\n//     </Swiper>\n//   )\n// };\n\n// export default Sliders;\n","import {\n  ContainerCabinet,\n  WelcomeUserName,\n  WrapperInfoUser,\n  WrapperUserInfo,\n  UserInfo,\n  UserPhotoSize,\n  LinkRecord,\n  SettingsBTN,\n  BlockInfo,\n} from './UserInformation.styled';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Settings from './Settings/Settings';\nimport 'react-awesome-slider/dist/styles.css';\nimport Sliders from './Sliders/Sliders';\n\nconst UserInformation = () => {\n  const [openCheckTrainings, setOpenCheckTrainings] = useState(false);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [isViewTrainings, setIsViewTrainings] = useState();\n  const linkTelegram = 'https://t.me/Ars_Fit_Studio_bot';\n  \n  const user = useSelector((state) => state.user);\n\n  const handleOpenCheck = (e) => {\n    setOpenCheckTrainings(true);\n    setIsViewTrainings(e.data.info)\n  };\n\n  const handleOpenSettings = (e) => { \n    e.preventDefault();\n    setOpenSettings(!openSettings);\n    setOpenCheckTrainings(false);\n  }\n\n  const dataVisitTrainingsGraphic = [\n    {\n      \"id\": \"відмінено\",\n      \"label\": \"відмінено\",\n      \"value\": user.trainings.nonVisit.length,\n      \"info\": user.trainings.nonVisit,\n    },\n    {\n      \"id\": \"відвідано\",\n      \"label\": \"відвідано\",\n      \"value\": user.trainings.visit.length,\n      \"info\": user.trainings.visit\n    },\n  ];\n  \n  const allUniqueVisitTrainings = user.trainings && user.trainings.allUnique\n    ? Object.entries(user.trainings.allUnique)\n    : [];\n  const dataUniqueVisitTrainingsGraphic = allUniqueVisitTrainings.map(([id, value]) => ({\n    id,\n    label: id,\n    value: value.length,\n    info: value\n  }));\n\n  const RenameAccess = (access) => {\n    switch (access) {\n      case \"client\":\n        return 'Клієнт';\n      case \"admin\":\n        return 'Адміністратор';\n      case \"coach\":\n        return 'Тренер';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <ContainerCabinet>\n      <WelcomeUserName>Вітаємо у власному кабінеті, <span>{user.name}</span>!</WelcomeUserName>\n      <WrapperInfoUser>\n        <WrapperUserInfo>\n          <UserInfo>\n            <UserPhotoSize src={user.photo} alt=\"user\" />\n            <div>\n              <h3>{user.name} {user.surname === 'Відсутні дані' ? '' : user.surname}</h3>\n              <p>{RenameAccess(user.access)}</p>\n              <LinkRecord to={linkTelegram}>Telegram bot</LinkRecord>\n              <SettingsBTN onClick={handleOpenSettings}>Налаштування</SettingsBTN>\n            </div>\n          </UserInfo>\n          <BlockInfo>\n            {openSettings\n              ?\n              <Settings />\n              :\n              <Sliders\n                dataVisit={dataVisitTrainingsGraphic}\n                infoVisit={handleOpenCheck}\n                dataUnique={dataUniqueVisitTrainingsGraphic}\n                infoUnique={handleOpenCheck}\n                trainings={isViewTrainings}\n                openCheckTrainings={openCheckTrainings}\n              />}\n          </BlockInfo>\n        </WrapperUserInfo>\n      </WrapperInfoUser>\n    </ContainerCabinet>\n  )\n};\n\nexport default UserInformation;","import UserInformation from '../../Components/UserInformation/UserInformation';\n\nconst Cabinet = () => {\n  return (\n    <>\n    <UserInformation/>\n    </>\n  )\n};\n\nexport default Cabinet;","import axios from 'axios';\n// https://sandra-back-end.herokuapp.com http://localhost:8080 https://sandra-back-render.onrender.com\n\nconst serverAPI = axios.create({\n  // baseURL: 'https://sandra-back-render.onrender.com/',\n  // baseURL: 'https://sandra-base.herokuapp.com/',\n  baseURL: 'https://ars-fit-studio-server.onrender.com',\n\n\n  // baseURL: 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nconst tgSandra = axios.create({\n  // 163995726 - sandra\n  // 525427019 - alexnumo\n  // baseURL: 'https://sandra-back-render.onrender.com/',\n  baseURL: 'https://api.telegram.org/bot5673512453:AAH-Ac0g-PMN8FwXj16kLg8OiXl99PYJYi8/sendMessage?chat_id=525427019&text=',\n  // baseURL: 'https://api.telegram.org/bot\"ключ_бота\"/sendMessage?chat_id=\"мій_чат\"&text=',\n  // baseURL: 'https://api.telegram.org/bot6096389512:AAGJpKndAcXG8jCZ1bqSXpEVNJSrcHkwv3I/sendMessage?chat_id=525427019&text=',\n  // baseURL: 'https://api.telegram.org/bot6096389512:AAGJpKndAcXG8jCZ1bqSXpEVNJSrcHkwv3I/sendMessage?chat_id=163995726&text=',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport {\n  serverAPI,\n  tgSandra\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { setUser } from '../Redux/userSlice';\nimport {\n  serverAPI,\n  tgSandra\n} from './api';\n\nexport const OnLogin = async (tel, password) => {\n  try {\n    const res = await serverAPI.post(`/user/login`, { tel, password });\n    // console.log(res.data);\n    const name = res.data.name;\n    toast.success(`${name}, Ви успішно увійшли`);\n    return res;\n  } catch (e) {\n    console.log(\"Error: \", e);\n\n    if (e.response && e.response.data && e.response.data.message) {\n      toast.error(e.response.data.message);\n    } else {\n      toast.error(\"Щось пішло не так\");\n    }\n  }\n};\n\nexport const OnRegistration = async (name, birthday, tel, password) => {\n  try {\n\n    const res = await serverAPI.post(`/user/registration`, { name, birthday, tel, password });\n    toast.success(`${name}, Ви успішно зареєструвалися`);\n    \n    return res.data;\n  } catch (e) {\n    console.log(\"Error: \", e);\n\n    if (e.response && e.response.data && e.response.data.message) {\n      toast.error(e.response.data.message);\n    } else {\n      toast.error(\"Щось пішло не так\");\n    }\n  }\n};\n\nexport const OnUpgradeUser = async (updatedUser) => {\n  try {\n    const result = await serverAPI.post(`/user/upgrade`, updatedUser);\n    toast.success(\"Зміни внесено успішно\");\n    return result;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnUpgradeUserPassword = async (updatedUser) => {\n  // console.log(updatedUser)\n  try {\n    const result = await serverAPI.post(`/user/upgrade/password`, updatedUser);\n    // if (result.status === 201) {\n    toast.success(\"Зміни внесено успішно\");\n    // }\n    console.log(result)\n    return result;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnGetAllSeasonTickets = async () => {\n  try {\n    const result = await serverAPI.get(`/seasonTickets`);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnBuySeasonTicket = async (userData) => {\n  // console.log(userData);\n  try {\n    const result = await serverAPI.post(`/seasonTickets`, userData);\n    console.log(result.data);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnSendTgBuySeasonTicket = async (userData) => {\n  // console.log(userData);\n  try {\n    const urlInsta = `https://www.instagram.com/${userData.user.instagram}/`;\n    let seasonTicketKind = '';\n    if (userData.seasonTicket.kind === 'group') {\n      seasonTicketKind = 'групових';\n    }\n    if (userData.seasonTicket.kind === 'personal') {\n      seasonTicketKind = 'персональних';\n    }\n\n    const phoneNumber = userData.user.tel.replace(/\\D/g, ''); // Видаляємо всі символи, окрім цифр\n    const nationalPhoneNumber = phoneNumber.startsWith('38') ? phoneNumber.slice(2) : phoneNumber; // Обрізаємо +38, якщо він присутній\n\n    const res = await tgSandra.get(`Клієнт ${userData.user.name} ${userData.user.surname} бажає придбати абонемент на ${userData.seasonTicket.name} для ${seasonTicketKind} занять вартістю ${userData.seasonTicket.price} грн. Номер телефону клієнта: ${nationalPhoneNumber}, instagram: ${urlInsta}`);\n\n    return res;\n  } catch (error) {\n    toast.error('Щось пішло не так');\n    console.log(error.message)\n  }\n};\n\n\nexport const OnRecordTraining = async (userData) => {\n  // console.log(userData)\n  try {\n    const res = await serverAPI.post(`/user/signUpTraining`, userData);\n    // console.log(res)\n    if (res.data.messages.error && res.data.messages.error === 'Кількість тренувань по абонементу закінчилася. Ви записані як на разове заняття') {\n        toast.warning(`${res.data.messages.error}`);\n      return res;\n    } else if (res.data.messages.error === 'Повторний запис на тренування') {\n        toast.error('Повторний запис на тренування');\n      return res.data;\n    } else {\n        toast.success('Ви успішно записалися на тренування');\n      return res;\n    }\n  } catch (e) {\n    toast.error('Щось пішло не так');\n    console.log(e);\n  }\n};\n\nexport const OnGetCoachTrainings = async (coachLabel) => {\n  // console.log(coachLabel);\n  try {\n    const result = await serverAPI.post(`/user/coach`, {coachLabel});\n    // console.log(coachLabel);\n    // console.log(result.data);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n// OnSendVisitTraining\nexport const OnSendVisitTraining = async (trainingInfo) => {\n  console.log(trainingInfo);\n  try {\n    const result = await serverAPI.post(`/user/coach/visit`, trainingInfo);\n    console.log(result);\n    if (result.data) {\n      toast.info(result.data);\n    }\n    // console.log(result);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnGetCoaches = async () => {\n  try {\n    const result = await serverAPI.get(`/user/coach`);\n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\nexport const OnGetCoachSalary = async (coachInfo) => {\n  try {\n    const result = await serverAPI.put(`/user/coach/salary`, coachInfo);\n    console.log(result.data); \n    return result.data;\n  } catch (error) {\n    toast.error('Упс, щось пішло не так');\n    console.error(error.message);\n  }\n};\n\n\n// export const getData = async ({id}) => {\n//   try {\n//     const result = await serverAPI.put(`/api`, { id });\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getDataALL = async () => {\n//   try {\n//     const result = await serverAPI.get(`/api`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const addTrainee = async ({ name_Coach, info }) => {\n//   try {\n//     const res = await serverAPI.post(`/trainee`, { name_Coach, info });\n//     toast.success('Зміни відправлено');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const findTrainee = async ({name_Coach}) => {\n//   try {\n//     const result = await serverAPI.put(`/trainee`, { name_Coach });\n//     console.log(result);\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getAllTrainee = async () => {\n//   try {\n//     const result = await serverAPI.get(`/trainee`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getAllCoach = async () => {\n//   try {\n//     const result = await serverAPI.get(`/coach`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const addCoach = async ({ name_Coach, tel, instagram, trainings }) => {\n//   try {\n//     const res = await serverAPI.post(`/coach`, { name_Coach, tel, instagram, trainings });\n//     toast.success('Нового тренера додано');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const deleteCoach = async (name_Coach) => {\n//   try {\n//     console.log(name_Coach);\n//     const result = await serverAPI.put(`/coach`, { name_Coach });\n//     toast.success('Тренера видалено');\n//     return console.log(result);\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getAllClient = async () => {\n//   try {\n//     const result = await serverAPI.get(`/client`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const addClient = async ({ name_client, tel }) => {\n//   try {\n//     const res = await serverAPI.post(`/client`, { name_client, tel });\n//     toast.success('Нового тренера додано');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const deleteClient = async ({name_client}) => {\n//   try {\n//     const result = await serverAPI.put(`/client`, { name_client });\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const sendNewKindTrainee = async ({ id, value, label }) => {\n//   try {\n//     const res = await serverAPI.post(`/kindtrainee`, { id, value, label });\n//     toast.success('Зміни відправлено');\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const deleteKindTrainee = async ({id}) => {\n//   try {\n//     const result = await serverAPI.put(`/kindtrainee`, { id });\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getKindTraineeAll = async () => {\n//   try {\n//     const result = await serverAPI.get(`/kindtrainee`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const sendDataUsers = async ({ id, info }) => {\n//   try {\n//     const res = await serverAPI.post(`/tgbot`, { id, info });\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\n\n// export const canceledTraining = async (id, status) => {\n//   try {\n//     if (status.status === false) {\n//       const res = await serverAPI.put(`/tgbot/visit`, { id, status });\n//       toast.success(`Скасовано заняття для клієнта \"${res.data.info[0].name}\"`)\n//     return res;\n//     }   \n//   } catch (e) {\n//     toast.error('Щось пішло не так');\n//     console.error(e.message);\n//   }\n// };\n\n// export const sendSeasonTicketVisitTrainee = async (id) => {\n//   try {\n//     const res = await serverAPI.put(`/tgbot/changeSeasonTicket`, id);\n//     toast.success(`Підтвердженео заняття для клієнта \"${res.data.info[0].name}\"`);\n//     return res;\n//   } catch (e) {\n//     toast.error('Щось пішло не так');\n//     console.error(e.message);\n//   }\n// };\n\n// export const sendVisitTrainingInfoSeasonTickets = async (data) => {\n//   try {\n//     // console.log(data)\n//     const res = await serverAPI.put(`/tgbot/changeSeasonTicket/infoTrainings`, data);\n//     return res;\n//   } catch (e) {\n//     toast.error('Щось пішло не так');\n//     console.error(e.message);\n//   }\n// };\n\n// export const deleteDataUsers = async (id) => {\n//   try {\n//     const result = await serverAPI.put(`/tgbot`, id);\n//     return result;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const getDataALLUsers = async () => {\n//   try {\n//     const result = await serverAPI.get(`/tgbot`);\n//     return result.data;\n//   } catch (error) {\n//     toast.error('Упс, щось пішло не так');\n//     console.error(error.message);\n//   }\n// };\n\n// export const sendSeasonTicket = async (data) => {\n//     try {\n//       const result = await serverAPI.put(`/tgbot/seasonTicket`, data);\n//       return result.data;\n//     } catch (error) {\n//       toast.error('Упс, щось пішло не так');\n//       console.error(error.message);\n//     }\n//   };\n\n// const sendTgRecord = async ({id, day_translate, clientName, kind_trainee, time, date, instaNickName}) => {\n//   try {\n//     const urlInsta = `https://www.instagram.com/${instaNickName.substring(1)}/`\n//     const res = await tgSandra.post(`Записався клієнт ${clientName} на тренування ${kind_trainee} в ${day_translate} о ${time}. Номер телефону клієнта ${id}, дата тренування: ${date}, Instagram: ${urlInsta}`,);\n//     return res;\n//   } catch (e) {\n//       toast.error('Щось пішло не так');\n//   }\n// };\nexport const clientAPI = {\n  OnLogin,\n  OnRegistration,\n  OnUpgradeUser,\n  OnUpgradeUserPassword,\n  OnGetAllSeasonTickets,\n  OnSendTgBuySeasonTicket,\n  OnBuySeasonTicket,\n  OnRecordTraining,\n  OnGetCoachTrainings,\n  OnSendVisitTraining,\n  OnGetCoaches,\n  OnGetCoachSalary,\n  // sendData,\n  // getData,\n  // getDataALL,\n  // addTrainee,\n  // findTrainee,\n  // getAllTrainee,\n  // addCoach,\n  // deleteCoach,\n  // getAllCoach,\n  // getAllClient,\n  // addClient,\n  // sendNewKindTrainee,\n  // deleteKindTrainee,\n  // getKindTraineeAll,\n  // sendDataUsers,\n  // sendSeasonTicketVisitTrainee,\n  // sendVisitTrainingInfoSeasonTickets,\n  // deleteDataUsers,\n  // getDataALLUsers,\n  // sendSeasonTicket,\n  // canceledTraining,\n  // sendTgRecord\n};"],"names":["ContainerCabinet","styled","div","_templateObject","_taggedTemplateLiteral","WelcomeUserName","h2","_templateObject2","WrapperInfoUser","_templateObject3","WrapperUserInfo","_templateObject4","UserInfo","_templateObject5","UserPhotoSize","img","_templateObject6","LinkRecord","Link","_templateObject7","SettingsBTN","button","_templateObject8","BlockInfo","_templateObject9","_templateObject10","ContainerSettings","UserInformation","InputStyle","input","select","WrapperModal","ModalOverlay","Modal","ModalHeader","CloseBTN","WrapperBTN","OKbutton","NonButton","SelectTrainings","WrapperCoachTrainings","_templateObject11","scheduleAPI","async","serverAPI","get","data","error","toast","console","message","dataSchedule","translateDay","day","time","kindTraining","kind_training","result","post","coach","success","concat","log","kindTrainingsAPI","kind","nameTraining","label","toLowerCase","days","day1","day2","day3","day4","day5","day6","day7","BoldIcon","_ref","size","color","_jsx","MdOutlineDone","fill","style","marginRight","fontSize","fontWeight","pay","ModalView","_ref2","handleClose","show","name_Coach","selectedDay","user","useSelector","state","completeRecord","setCompleteRecord","useState","completeRecordData","setCompleteRecordData","isDisable","setIsDisable","children","_Fragment","_jsxs","onClick","e","selectedDate","preventDefault","options","timeZone","weekday","month","year","hour","minute","second","timeZoneName","selectedDateValue","Date","toLocaleString","tomorrow","setDate","getDate","dayAfterTomorrow","sendData","userID","id","date","clientAPI","OnRecordTraining","then","status","newInfoUser","handleConfirmed","disabled","PasswordForm","_ref3","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setMessage","handleChange","name","value","target","handleSubmit","OnUpgradeUserPassword","justifyContent","margin","display","flexDirection","alignItems","onSubmit","type","placeholder","onChange","required","ModalViewBuySubscription","_ref4","handleShowModal","dataSeasonTickets","seasonTickets","allKindSeasonTickets","filter","item","includes","selectedKindTraining","setSelectedKindTraining","selectedSeasonTicket","setSelectedSeasonTicket","buySeasonTicket","setBuySeasonTicket","chooseKind","backgroundColor","map","index","overflow","length","items","_id","price","userDataSeasonTicket","seasonTicket","find","dateChoose","surname","tel","instagram","OnBuySeasonTicket","ModalViewCoachSalary","_ref5","dateRanges","selectedCoach","dataCoachTrainings","handleCloseModal","showUsers","setShowUsers","selectedTrainingIndex","setSelectedTrainingIndex","selectedDates","startDate","toLocaleDateString","endDate","useEffect","document","getElementById","countTrainingsUsers","users","Array","isArray","reduce","acc","trainingCanceled","trainingVisit","handleShowUsers","countSalaryCoach","usersCount","totalSalary","Object","values","entries","_ref6","key","training","className","FaAngleUp","FaAngleDown","ModalViewAddSchedule","_ref7","openChangeSchedule","dataCoach","kindTrainingData","selectedTime","setSelectedTime","setSelectedDay","setSelectedCoach","marginBottom","labelAuth","ModalViewAddKindTraining","_ref8","openAddKindTraining","inputKind","setInputKind","inputKindID","setInputKindID","kindSend","Settings","dispatch","useDispatch","formData","setFormData","openChangeName","openChangeSurname","openChangePassword","openChangeInstagram","openChangeTrainingPopular","newName","newSurname","password","newInstagram","newTrainingPopular","trainings","popular","toggleField","fieldName","updatedFormData","handleSave","field","updatedUser","setUser","OnUpgradeUser","charAt","toUpperCase","slice","MdDone","marginLeft","PiPencilSimple","telegramBot","number","BsTelegram","PiPencilSlash","WrapperInfoSlider","WrapperRecord","Title","p","LovelyTrainingName","span","RecordBTN","LoveTrainings","_user$trainings$visit","setShow","setUserID","setName_Coach","setTime","setDay","setKind_training","favoriteTrainingsUser","schedule","filterTrainings","reformDayOfWeek","today","getDay","firstDay","secondDay","todayTrainings","tomorrowTrainings","NonLoveTraining","NonTrainings","width","handleRecordTraining","visit","undefined","Schedule","scheduleData","setScheduleData","getDataSchedule","fetchData","reformedSchedule","dayOfWeek","timeOfDay","todayIndex","indexOf","sortedTraining","i","currentDay","dayTrainings","forEach","threeDays","dayIndex","reformSchedule","scheduleToday","Day1","scheduleTomorrow","Day2","scheduleDayAfterTomorrow","Day3","dayInfo","keys","VisitTrainingsGraphic","info","ResponsivePie","top","right","bottom","left","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","colors","scheme","borderColor","from","modifiers","arcLinkLabelsSkipAngle","enableArcLinkLabels","motionConfig","arcLabel","legends","anchor","direction","justify","translateX","translateY","itemWidth","itemHeight","itemsSpacing","symbolSize","itemDirection","ContainerTrainings","WrapperTraining","ListTraining","formatDate","WrapperBuyTicket","BuyTicketBTN","BuySubscription","showModal","setShowModal","Subscription","openCheckTrainings","setOpenCheckTrainings","isViewTrainings","setIsViewTrainings","nameSeasonTicket","dateOfBuying","remainderSeasonTicket","remainderOfTrainings","allVisitTrainingsSubscription","allUnique","dataVisitTrainingsSubscriptionGraphic","inputDate","dateArray","split","datePart","timePart","dateParts","parseInt","timeParts","currentDate","setMonth","getMonth","newDay","newMonth","newYear","getFullYear","toString","endSubscriptionDate","difference","endDateDay","endMonth","endYear","timeDifference","Math","ceil","calculateDateDifference","differencePercent","endDay","daysDifference","parseFloat","toFixed","calculateDateDifferencePercent","NonInformation","height","position","BsSuitHeartFill","transform","marginTop","VisibleTrainings","Visiting","dataVisitTrainingsGraphic","nonVisit","NonVisitTrainings","Trainings","dataUniqueVisitTrainingsGraphic","WrapperInformation","WrapperRecords","NameTraining","WrapperUsersName","TrainingsSchedule","dataTrainings","setDataTrainings","dataTrainingsToday","setDataTrainingsToday","dataTrainingsTomorrow","setDataTrainingsTomorrow","visitTrainingMap","setVisitTrainingMap","cancelVisitTrainingMap","setCancelVisitTrainingMap","OnGetCoachTrainings","getTrainingsCoach","formattedDate","tomorrowYear","tomorrowMonth","tomorrowDay","tomorrowFormattedDate","allTrainings","filteredTrainingsToday","filteredTrainingsTomorrow","uniqueTimesToday","Set","uniqueTimesTomorrow","uniqueKindTrainingsToday","uniqueKindTrainingsTomorrow","newDataToday","flatMap","usersInformation","foundDataTraining","trainingID","seasonTicketID","seasonTicketsID","visitTraining","canceledTraining","newDataTomorrow","handleCheckVisit","dataVisitTraining","sendVisitRequest","OnSendVisitTraining","prevState","outerIndex","userData","FcCheckmark","href","rel","IoIosClose","innerIndex","WrapperCoachInfo","ScheduleAdmin","setDataCoach","setDateRanges","open","setOpen","setDataCoachTrainings","OnGetCoaches","getDataCoach","_dateRanges$item$labe","_dateRanges$item$labe2","_dateRanges$item$labe3","_dateRanges$item$labe4","_dateRanges$item$labe5","_dateRanges$item$labe6","_dateRanges$item$labe7","BsFillTelephoneFill","DatePicker","selected","handleStartDateChange","selectsStart","placeholderText","handleEndDateChange","selectsEnd","minDate","coachInfo","getCoachesSalary","OnGetCoachSalary","handleViewTrainingsPay","ChangeButton","WrapperListSchedule","TrainingView","scheduleByDay","setScheduleByDay","monday","tuesday","wednesday","thursday","friday","saturday","sunday","setKindTrainingData","isOpenAddKindTraining","setIsOpenAddKindTraining","isOpenChangeSchedule","setIsOpenChangeSchedule","selectDayData","setSelectDayData","selectDay","setSelectDay","getDataKindTrainings","filteredSchedule","dayKey","sort","a","b","Sliders","access","Prepare","FaPhoenixFramework","AwesomeSlider","animation","openSettings","setOpenSettings","handleOpenCheck","src","photo","alt","RenameAccess","to","dataVisit","infoVisit","dataUnique","infoUnique","Cabinet","axios","create","baseURL","headers","tgSandra","OnLogin","res","response","OnRegistration","birthday","OnGetAllSeasonTickets","OnSendTgBuySeasonTicket","urlInsta","seasonTicketKind","phoneNumber","replace","nationalPhoneNumber","startsWith","messages","warning","coachLabel","trainingInfo","put"],"sourceRoot":""}